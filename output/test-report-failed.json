{
  "timestamp": "2025-03-05T00:12:41.199Z",
  "testSuites": [
    {
      "name": "Performance Tests",
      "command": "npx jest tests/performance",
      "required": false,
      "status": "failed",
      "output": "\nüîç \u001b[1m\u001b[36mUltraLink Test Suite Starting\u001b[0m\n\n  console.log\n    Performance - Dataset Creation (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.68 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.20 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Dataset Creation (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 8.46 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.05 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 1.71 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Dataset Creation (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 42.51 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.20 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.25 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 6.45 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Type (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.18 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.03 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Attribute (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.05 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Get Relationships (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.06 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Type (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.08 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.05 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Attribute (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.18 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.22 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Get Relationships (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.01 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Type (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.46 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.03 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.22 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Find by Attribute (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.48 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.83 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Get Relationships (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.03 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - JSON Export (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.22 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.02 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.10 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - GraphML Export (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.50 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.03 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.20 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - JSON Export (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 0.77 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.73 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.34 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.69 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - GraphML Export (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 1.18 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 1.69 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - JSON Export (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 2.69 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 4.03 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 1.39 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 2.64 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - GraphML Export (large):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 6.31 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 3.31 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 3.27 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: -4.07 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Full Blob Export (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 1.85 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.84 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 1.07 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Compressed Full Blob Export (small):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 2.04 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 0.05 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 0.00 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 0.99 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Full Blob Export (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 13.08 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 2.58 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 2.73 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: -2.97 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance - Compressed Full Blob Export (medium):\n\n      at log (tests/performance/large-dataset.test.js:55:11)\n\n  console.log\n      Duration: 16.70 ms\n\n      at log (tests/performance/large-dataset.test.js:56:11)\n\n  console.log\n      Memory delta:\n\n      at log (tests/performance/large-dataset.test.js:57:11)\n\n  console.log\n        RSS: 6.56 MB\n\n      at log (tests/performance/large-dataset.test.js:58:11)\n\n  console.log\n        Heap total: 1.48 MB\n\n      at log (tests/performance/large-dataset.test.js:59:11)\n\n  console.log\n        Heap used: 9.00 MB\n\n      at log (tests/performance/large-dataset.test.js:60:11)\n\n  console.log\n\n\n      at log (tests/performance/large-dataset.test.js:61:11)\n\n  console.log\n    Performance results saved to /Users/tetra/Documents/GitHub/ultralink/output/performance/performance-2025-03-05T00-12-42-384Z.json\n\n      at log (tests/performance/large-dataset.test.js:78:11)\n\n‚ùå \u001b[31mtests/performance/large-dataset.test.js\u001b[0m - 23/25 tests passed\n\nüìä \u001b[1m\u001b[36mTest Summary\u001b[0m\n   Total Test Suites: 1\n   Total Tests: 25\n   Passed: \u001b[32m23\u001b[0m\n   Failed: \u001b[31m2\u001b[0m\n   Time: 0.47s\n\n‚ùå \u001b[1m\u001b[31mFailed Tests Details:\u001b[0m\n\n1. \u001b[31mPerformance Tests ‚Ä∫ Full Blob Performance ‚Ä∫ should efficiently import from full blob for a small dataset\u001b[0m\n   üìÑ File: tests/performance/large-dataset.test.js\n   üî¥ TypeError: newUltralink.fromFullBlob is not a function\n\n2. \u001b[31mPerformance Tests ‚Ä∫ Full Blob Performance ‚Ä∫ should efficiently import from full blob for a medium dataset\u001b[0m\n   üìÑ File: tests/performance/large-dataset.test.js\n   üî¥ TypeError: newUltralink.fromFullBlob is not a function\n\n‚ùó \u001b[33mCheck the failed tests and fix the issues before proceeding.\u001b[0m\n\n",
      "error": "Command failed: npx jest tests/performance\nFAIL tests/performance/large-dataset.test.js\n  Performance Tests\n    Dataset Creation\n      ‚úì should create a small dataset efficiently (12 ms)\n      ‚úì should create a medium dataset efficiently (16 ms)\n      ‚úì should create a large dataset efficiently (44 ms)\n    Entity Querying\n      ‚úì should efficiently find entities by type in a small dataset (1 ms)\n      ‚úì should efficiently find entities by attribute in a small dataset (1 ms)\n      ‚úì should efficiently get relationships in a small dataset (1 ms)\n      ‚úì should efficiently find entities by type in a medium dataset (1 ms)\n      ‚úì should efficiently find entities by attribute in a medium dataset (1 ms)\n      ‚úì should efficiently get relationships in a medium dataset (1 ms)\n      ‚úì should efficiently find entities by type in a large dataset (1 ms)\n      ‚úì should efficiently find entities by attribute in a large dataset (3 ms)\n      ‚úì should efficiently get relationships in a large dataset (2 ms)\n    Export Performance\n      ‚úì should efficiently export to JSON for a small dataset (6 ms)\n      ‚úì should efficiently export to GraphML for a small dataset (2 ms)\n      ‚úì should efficiently export to JSON for a medium dataset (2 ms)\n      ‚úì should efficiently export to GraphML for a medium dataset (3 ms)\n      ‚úì should efficiently export to JSON for a large dataset (3 ms)\n      ‚úì should efficiently export to GraphML for a large dataset (8 ms)\n    Full Blob Performance\n      ‚úì should efficiently export to full blob for a small dataset (3 ms)\n      ‚úì should efficiently export to compressed full blob for a small dataset (3 ms)\n      ‚úï should efficiently import from full blob for a small dataset (2 ms)\n      ‚úì should efficiently export to full blob for a medium dataset (14 ms)\n      ‚úì should efficiently export to compressed full blob for a medium dataset (20 ms)\n      ‚úï should efficiently import from full blob for a medium dataset (13 ms)\n    Memory Usage\n      ‚úì should maintain reasonable memory usage (9 ms)\n\n  ‚óè Performance Tests ‚Ä∫ Full Blob Performance ‚Ä∫ should efficiently import from full blob for a small dataset\n\n    TypeError: newUltralink.fromFullBlob is not a function\n\n      317 |         const { timing } = await measureTime(async () => {\n      318 |           const newUltralink = new UltraLink();\n    > 319 |           await newUltralink.fromFullBlob(blob);\n          |                              ^\n      320 |           return newUltralink;\n      321 |         });\n      322 |         \n\n      at fromFullBlob (tests/performance/large-dataset.test.js:319:30)\n      at fn (tests/performance/large-dataset.test.js:32:24)\n      at Object.measureTime (tests/performance/large-dataset.test.js:317:34)\n\n  ‚óè Performance Tests ‚Ä∫ Full Blob Performance ‚Ä∫ should efficiently import from full blob for a medium dataset\n\n    TypeError: newUltralink.fromFullBlob is not a function\n\n      317 |         const { timing } = await measureTime(async () => {\n      318 |           const newUltralink = new UltraLink();\n    > 319 |           await newUltralink.fromFullBlob(blob);\n          |                              ^\n      320 |           return newUltralink;\n      321 |         });\n      322 |         \n\n      at fromFullBlob (tests/performance/large-dataset.test.js:319:30)\n      at fn (tests/performance/large-dataset.test.js:32:24)\n      at Object.measureTime (tests/performance/large-dataset.test.js:317:34)\n\nTest Suites: 1 failed, 1 total\nTests:       2 failed, 23 passed, 25 total\nSnapshots:   0 total\nTime:        0.471 s, estimated 2 s\nRan all test suites matching /tests\\/performance/i.\n",
      "exitCode": 1
    },
    {
      "name": "Unit Tests",
      "command": "npx jest tests/unit",
      "required": true,
      "status": "failed",
      "output": "\nüîç \u001b[1m\u001b[36mUltraLink Test Suite Starting\u001b[0m\n\n‚ùå \u001b[31mtests/unit/ultralink.test.js\u001b[0m - 14/25 tests passed\n‚ùå \u001b[31mtests/unit/data-export.test.js\u001b[0m - 4/9 tests passed\n‚úÖ \u001b[32mtests/unit/entity.test.js\u001b[0m - 13/13 tests passed\n\nüìä \u001b[1m\u001b[36mTest Summary\u001b[0m\n   Total Test Suites: 3\n   Total Tests: 47\n   Passed: \u001b[32m31\u001b[0m\n   Failed: \u001b[31m16\u001b[0m\n   Time: 0.32s\n\n‚ùå \u001b[1m\u001b[31mFailed Tests Details:\u001b[0m\n\n1. \u001b[31mUltraLink ‚Ä∫ Entity Management ‚Ä∫ should throw an error when updating a non-existent entity\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toThrow()\n\nReceived function did not throw\n\n2. \u001b[31mUltraLink ‚Ä∫ Entity Management ‚Ä∫ should delete an entity with deleteEntity method\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ TypeError: Cannot read properties of undefined (reading 'entries')\n\n3. \u001b[31mUltraLink ‚Ä∫ Relationship Management ‚Ä∫ should throw an error when adding a link with non-existent source\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toThrow(expected)\n\nExpected pattern: /Source entity not found: nonexistent/\nReceived message: \"Source entity \\\"nonexistent\\\" not found\"\n\n      18 |   // Validate entities exist\n      19 |   if (!this.entities.has(sourceId)) {\n    > 20 |     throw new Error(`Source entity \"${sourceId}\" not found`);\n         |           ^\n      21 |   }\n      22 |   if (!this.entities.has(targetId)) {\n      23 |     throw new Error(`Target entity \"${targetId}\" not found`);\n\n4. \u001b[31mUltraLink ‚Ä∫ Relationship Management ‚Ä∫ should throw an error when adding a link with non-existent target\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toThrow(expected)\n\nExpected pattern: /Target entity not found: nonexistent/\nReceived message: \"Target entity \\\"nonexistent\\\" not found\"\n\n      21 |   }\n      22 |   if (!this.entities.has(targetId)) {\n    > 23 |     throw new Error(`Target entity \"${targetId}\" not found`);\n         |           ^\n      24 |   }\n      25 |\n      26 |   // Create relationship object\n\n5. \u001b[31mUltraLink ‚Ä∫ Relationship Management ‚Ä∫ should filter relationships by type\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n\n6. \u001b[31mUltraLink ‚Ä∫ Relationship Management ‚Ä∫ should delete a relationship\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ TypeError: ultralink.deleteLink is not a function\n\n7. \u001b[31mUltraLink ‚Ä∫ Relationship Management ‚Ä∫ should return false when deleting a non-existent relationship\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ TypeError: ultralink.deleteLink is not a function\n\n8. \u001b[31mUltraLink ‚Ä∫ Data Export ‚Ä∫ should export to GraphML format\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\nReceived string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n<graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n    xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n  <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n    <node id=\\\"person1\\\">\n      <data key=\\\"type\\\">person</data>\n      <data key=\\\"name\\\">John Doe</data>\n    </node>\n    <node id=\\\"document1\\\">\n      <data key=\\\"type\\\">document</data>\n    </node>\n    <node id=\\\"topic1\\\">\n      <data key=\\\"type\\\">topic</data>\n      <data key=\\\"name\\\">Financial Analysis</data>\n    </node>\n    <edge source=\\\"person1\\\" target=\\\"document1\\\">\n      <data key=\\\"type\\\">authored</data>\n    </edge>\n    <edge source=\\\"document1\\\" target=\\\"topic1\\\">\n      <data key=\\\"type\\\">covers</data>\n    </edge>\n  </graph>\n</graphml>\"\n\n9. \u001b[31mUltraLink ‚Ä∫ Data Export ‚Ä∫ should export to CSV format\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ Entity with ID \"person1\" already exists. Set allowOverwrite: true in config to override.\n\n10. \u001b[31mUltraLink ‚Ä∫ Full Blob Export/Import ‚Ä∫ should export and import a full blob\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ TypeError: newUltralink.fromFullBlob is not a function\n\n11. \u001b[31mUltraLink ‚Ä∫ Full Blob Export/Import ‚Ä∫ should export a compressed full blob\u001b[0m\n   üìÑ File: tests/unit/ultralink.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: \"string\"\nReceived: \"object\"\n\n12. \u001b[31mUltraLink Data Export ‚Ä∫ JSON Export ‚Ä∫ should export JSON with vectors when requested\u001b[0m\n   üìÑ File: tests/unit/data-export.test.js\n   üî¥ expect(received).toBeDefined()\n\nReceived: undefined\n\n13. \u001b[31mUltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should export to KIF format with correct structure\u001b[0m\n   üìÑ File: tests/unit/data-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(age person1 30)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.065Z\n;; Entities and their attributes\n(instance person1 Person)\n(name person1 \\\"Alice\\\")\n(age person1 \\\"30\\\")¬∑\n(instance person2 Person)\n(name person2 \\\"Bob\\\")\n(age person2 \\\"25\\\")¬∑\n(instance project1 Project)\n(title project1 \\\"Project Alpha\\\")\n(status project1 \\\"active\\\")¬∑\n;; Relationships\n(manages person1 project1)\n(contributes_to person2 project1)¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 3)\n(= (relationshipCount UltraLinkExport) 2)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.065Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n14. \u001b[31mUltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should include meta-knowledge when requested\u001b[0m\n   üìÑ File: tests/unit/data-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(= (creationDate UltraLinkExport)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.066Z\n;; Entities and their attributes\n(instance person1 Person)\n(name person1 \\\"Alice\\\")¬∑\n(instance person2 Person)\n(name person2 \\\"Bob\\\")¬∑\n;; Relationships\n(knows person1 person2)¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 2)\n(= (relationshipCount UltraLinkExport) 1)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n15. \u001b[31mUltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should include functions and rules when requested\u001b[0m\n   üìÑ File: tests/unit/data-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(deffunction relationshipCount (?x)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.066Z\n;; Entities and their attributes\n;; Relationships¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 0)\n(= (relationshipCount UltraLinkExport) 0)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n16. \u001b[31mUltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should handle complex entity attributes correctly\u001b[0m\n   üìÑ File: tests/unit/data-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(numeric test-entity 42)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.066Z\n;; Entities and their attributes\n(instance test-entity Complex_type)\n(name with spaces test-entity \\\"Test Entity\\\")\n(numeric test-entity \\\"42\\\")\n(boolean test-entity \\\"true\\\")\n(nested.property test-entity \\\"nested value\\\")\n(special\\\"characters test-entity \\\"value with \\\"quotes\\\"\\\")¬∑\n;; Relationships¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 1)\n(= (relationshipCount UltraLinkExport) 0)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n‚ùó \u001b[33mCheck the failed tests and fix the issues before proceeding.\u001b[0m\n\n",
      "error": "Command failed: npx jest tests/unit\nFAIL tests/unit/ultralink.test.js\n  UltraLink\n    Constructor\n      ‚úì should create an UltraLink instance with default options (2 ms)\n      ‚úì should create an UltraLink instance with custom options\n    Entity Management\n      ‚úì should add an entity with addEntity method (2 ms)\n      ‚úì should retrieve an entity with getEntity method\n      ‚úì should return null when getting a non-existent entity\n      ‚úì should update an entity with updateEntity method (1 ms)\n      ‚úï should throw an error when updating a non-existent entity\n      ‚úï should delete an entity with deleteEntity method\n      ‚úì should return false when deleting a non-existent entity\n      ‚úì should find entities by type\n      ‚úì should find entities by attribute value (1 ms)\n      ‚úì should find entities with custom filter\n    Relationship Management\n      ‚úì should add a relationship with addLink method\n      ‚úï should throw an error when adding a link with non-existent source (8 ms)\n      ‚úï should throw an error when adding a link with non-existent target (1 ms)\n      ‚úì should get relationships for an entity\n      ‚úï should filter relationships by type\n      ‚úì should get incoming relationships (backlinks)\n      ‚úï should delete a relationship\n      ‚úï should return false when deleting a non-existent relationship\n    Data Export\n      ‚úì should export to JSON format (1 ms)\n      ‚úï should export to GraphML format (1 ms)\n      ‚úï should export to CSV format (1 ms)\n    Full Blob Export/Import\n      ‚úï should export and import a full blob\n      ‚úï should export a compressed full blob (1 ms)\n\n  ‚óè UltraLink ‚Ä∫ Entity Management ‚Ä∫ should throw an error when updating a non-existent entity\n\n    expect(received).toThrow()\n\n    Received function did not throw\n\n       99 |       expect(() => {\n      100 |         ultralink.updateEntity('nonexistent', { name: 'New Name' });\n    > 101 |       }).toThrow();\n          |          ^\n      102 |     });\n      103 |     \n      104 |     it('should delete an entity with deleteEntity method', () => {\n\n      at Object.toThrow (tests/unit/ultralink.test.js:101:10)\n\n  ‚óè UltraLink ‚Ä∫ Entity Management ‚Ä∫ should delete an entity with deleteEntity method\n\n    TypeError: Cannot read properties of undefined (reading 'entries')\n\n      71 |   \n      72 |   // Remove all relationships involving this entity\n    > 73 |   for (const [key, rel] of this.links.entries()) {\n         |                                       ^\n      74 |     if (rel.source === id || rel.target === id) {\n      75 |       this.links.delete(key);\n      76 |     }\n\n      at UltraLink.entries (src/lib/entity-manager.js:73:39)\n      at UltraLink.call [as deleteEntity] (src/ultralink.js:79:39)\n      at Object.deleteEntity (tests/unit/ultralink.test.js:107:32)\n\n  ‚óè UltraLink ‚Ä∫ Relationship Management ‚Ä∫ should throw an error when adding a link with non-existent source\n\n    expect(received).toThrow(expected)\n\n    Expected pattern: /Source entity not found: nonexistent/\n    Received message: \"Source entity \\\"nonexistent\\\" not found\"\n\n          18 |   // Validate entities exist\n          19 |   if (!this.entities.has(sourceId)) {\n        > 20 |     throw new Error(`Source entity \"${sourceId}\" not found`);\n             |           ^\n          21 |   }\n          22 |   if (!this.entities.has(targetId)) {\n          23 |     throw new Error(`Target entity \"${targetId}\" not found`);\n\n      at UltraLink.addRelationship (src/lib/relationship-manager.js:20:11)\n      at UltraLink.call [as addRelationship] (src/ultralink.js:101:48)\n      at UltraLink.addRelationship [as addLink] (src/ultralink.js:114:17)\n      at addLink (tests/unit/ultralink.test.js:188:19)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (tests/unit/ultralink.test.js:189:10)\n      at Object.toThrow (tests/unit/ultralink.test.js:189:10)\n\n  ‚óè UltraLink ‚Ä∫ Relationship Management ‚Ä∫ should throw an error when adding a link with non-existent target\n\n    expect(received).toThrow(expected)\n\n    Expected pattern: /Target entity not found: nonexistent/\n    Received message: \"Target entity \\\"nonexistent\\\" not found\"\n\n          21 |   }\n          22 |   if (!this.entities.has(targetId)) {\n        > 23 |     throw new Error(`Target entity \"${targetId}\" not found`);\n             |           ^\n          24 |   }\n          25 |\n          26 |   // Create relationship object\n\n      at UltraLink.addRelationship (src/lib/relationship-manager.js:23:11)\n      at UltraLink.call [as addRelationship] (src/ultralink.js:101:48)\n      at UltraLink.addRelationship [as addLink] (src/ultralink.js:114:17)\n      at addLink (tests/unit/ultralink.test.js:194:19)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (tests/unit/ultralink.test.js:195:10)\n      at Object.toThrow (tests/unit/ultralink.test.js:195:10)\n\n  ‚óè UltraLink ‚Ä∫ Relationship Management ‚Ä∫ should filter relationships by type\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 2\n\n      217 |       });\n      218 |       \n    > 219 |       expect(authoredOnly.length).toBe(1);\n          |                                   ^\n      220 |       expect(authoredOnly[0].type).toBe('authored');\n      221 |     });\n      222 |     \n\n      at Object.toBe (tests/unit/ultralink.test.js:219:35)\n\n  ‚óè UltraLink ‚Ä∫ Relationship Management ‚Ä∫ should delete a relationship\n\n    TypeError: ultralink.deleteLink is not a function\n\n      238 |       ultralink.addLink('person1', 'person2', 'knows', { since: '2020' });\n      239 |       \n    > 240 |       const result = ultralink.deleteLink('person1', 'document1', 'authored');\n          |                                ^\n      241 |       \n      242 |       expect(result).toBe(true);\n      243 |       expect(ultralink.relationships.size).toBe(1);\n\n      at Object.deleteLink (tests/unit/ultralink.test.js:240:32)\n\n  ‚óè UltraLink ‚Ä∫ Relationship Management ‚Ä∫ should return false when deleting a non-existent relationship\n\n    TypeError: ultralink.deleteLink is not a function\n\n      247 |     \n      248 |     it('should return false when deleting a non-existent relationship', () => {\n    > 249 |       const result = ultralink.deleteLink('person1', 'document1', 'nonexistent');\n          |                                ^\n      250 |       \n      251 |       expect(result).toBe(false);\n      252 |     });\n\n      at Object.deleteLink (tests/unit/ultralink.test.js:249:32)\n\n  ‚óè UltraLink ‚Ä∫ Data Export ‚Ä∫ should export to GraphML format\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\n    Received string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n    <graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n        xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n        xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n         http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n      <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n        <node id=\\\"person1\\\">\n          <data key=\\\"type\\\">person</data>\n          <data key=\\\"name\\\">John Doe</data>\n        </node>\n        <node id=\\\"document1\\\">\n          <data key=\\\"type\\\">document</data>\n        </node>\n        <node id=\\\"topic1\\\">\n          <data key=\\\"type\\\">topic</data>\n          <data key=\\\"name\\\">Financial Analysis</data>\n        </node>\n        <edge source=\\\"person1\\\" target=\\\"document1\\\">\n          <data key=\\\"type\\\">authored</data>\n        </edge>\n        <edge source=\\\"document1\\\" target=\\\"topic1\\\">\n          <data key=\\\"type\\\">covers</data>\n        </edge>\n      </graph>\n    </graphml>\"\n\n      325 |       expect(graphml).toContain('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');\n      326 |       expect(graphml).toContain('<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"');\n    > 327 |       expect(graphml).toContain('<graph id=\"G\" edgedefault=\"directed\">');\n          |                       ^\n      328 |       \n      329 |       // Check that nodes are included\n      330 |       expect(graphml).toContain('<node id=\"person1\">');\n\n      at Object.toContain (tests/unit/ultralink.test.js:327:23)\n\n  ‚óè UltraLink ‚Ä∫ Data Export ‚Ä∫ should export to CSV format\n\n    Entity with ID \"person1\" already exists. Set allowOverwrite: true in config to override.\n\n      16 |   // Prevent overwriting existing entities unless explicitly allowed\n      17 |   if (this.entities.has(id) && !this.config.allowOverwrite) {\n    > 18 |     throw new Error(`Entity with ID \"${id}\" already exists. Set allowOverwrite: true in config to override.`);\n         |           ^\n      19 |   }\n      20 |\n      21 |   const entity = {\n\n      at UltraLink.addEntity (src/lib/entity-manager.js:18:11)\n      at UltraLink.call [as addEntity] (src/ultralink.js:50:36)\n      at Object.addEntity (tests/unit/ultralink.test.js:341:17)\n\n  ‚óè UltraLink ‚Ä∫ Full Blob Export/Import ‚Ä∫ should export and import a full blob\n\n    TypeError: newUltralink.fromFullBlob is not a function\n\n      380 |       \n      381 |       // Import the blob\n    > 382 |       await newUltralink.fromFullBlob(blob);\n          |                          ^\n      383 |       \n      384 |       // Verify the data was imported correctly\n      385 |       expect(newUltralink.entities.size).toBe(ultralink.entities.size);\n\n      at Object.fromFullBlob (tests/unit/ultralink.test.js:382:26)\n\n  ‚óè UltraLink ‚Ä∫ Full Blob Export/Import ‚Ä∫ should export a compressed full blob\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"string\"\n    Received: \"object\"\n\n      404 |       \n      405 |       // Verify it's a string (compressed blobs are base64 strings)\n    > 406 |       expect(typeof compressedBlob).toBe('string');\n          |                                     ^\n      407 |       \n      408 |       // Import from compressed blob\n      409 |       const newUltralink = new UltraLink();\n\n      at Object.toBe (tests/unit/ultralink.test.js:406:37)\n\nFAIL tests/unit/data-export.test.js\n  UltraLink Data Export\n    JSON Export\n      ‚úì should export to JSON format (1 ms)\n      ‚úì should export to JSON with pretty formatting\n      ‚úï should export JSON with vectors when requested (1 ms)\n    GraphML Export\n      ‚úì should export to GraphML format\n    CSV Export\n      ‚úì should export to CSV format (1 ms)\n    KIF Format Export\n      ‚úï should export to KIF format with correct structure\n      ‚úï should include meta-knowledge when requested (1 ms)\n      ‚úï should include functions and rules when requested\n      ‚úï should handle complex entity attributes correctly\n\n  ‚óè UltraLink Data Export ‚Ä∫ JSON Export ‚Ä∫ should export JSON with vectors when requested\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      86 |       const json = JSON.parse(jsonStr);\n      87 |       const exportedEntity = json.entities.find(e => e.id === 'person1');\n    > 88 |       expect(exportedEntity.vector).toBeDefined();\n         |                                     ^\n      89 |       expect(Array.isArray(exportedEntity.vector)).toBe(true);\n      90 |       \n      91 |       // Check vector values with tolerance for Float32Array precision differences\n\n      at Object.toBeDefined (tests/unit/data-export.test.js:88:37)\n\n  ‚óè UltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should export to KIF format with correct structure\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(age person1 30)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.065Z\n    ;; Entities and their attributes\n    (instance person1 Person)\n    (name person1 \\\"Alice\\\")\n    (age person1 \\\"30\\\")¬∑\n    (instance person2 Person)\n    (name person2 \\\"Bob\\\")\n    (age person2 \\\"25\\\")¬∑\n    (instance project1 Project)\n    (title project1 \\\"Project Alpha\\\")\n    (status project1 \\\"active\\\")¬∑\n    ;; Relationships\n    (manages person1 project1)\n    (contributes_to person2 project1)¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 3)\n    (= (relationshipCount UltraLinkExport) 2)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.065Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      165 |       expect(kif).toContain('(instance person1 Person)');\n      166 |       expect(kif).toContain('(name person1 \"Alice\")');\n    > 167 |       expect(kif).toContain('(age person1 30)');\n          |                   ^\n      168 |       \n      169 |       expect(kif).toContain('(instance person2 Person)');\n      170 |       expect(kif).toContain('(name person2 \"Bob\")');\n\n      at Object.toContain (tests/unit/data-export.test.js:167:19)\n\n  ‚óè UltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should include meta-knowledge when requested\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(= (creationDate UltraLinkExport)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.066Z\n    ;; Entities and their attributes\n    (instance person1 Person)\n    (name person1 \\\"Alice\\\")¬∑\n    (instance person2 Person)\n    (name person2 \\\"Bob\\\")¬∑\n    ;; Relationships\n    (knows person1 person2)¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 2)\n    (= (relationshipCount UltraLinkExport) 1)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      196 |       // Verify meta-knowledge sections\n      197 |       expect(kif).toContain(';; Meta-knowledge');\n    > 198 |       expect(kif).toContain('(= (creationDate UltraLinkExport)');\n          |                   ^\n      199 |       expect(kif).toContain('(= (entityCount UltraLinkExport) 2)');\n      200 |       expect(kif).toContain('(= (relationshipCount UltraLinkExport) 1)');\n      201 |     });\n\n      at Object.toContain (tests/unit/data-export.test.js:198:19)\n\n  ‚óè UltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should include functions and rules when requested\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(deffunction relationshipCount (?x)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.066Z\n    ;; Entities and their attributes\n    ;; Relationships¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 0)\n    (= (relationshipCount UltraLinkExport) 0)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      212 |       // Verify functions section\n      213 |       expect(kif).toContain(';; Functions');\n    > 214 |       expect(kif).toContain('(deffunction relationshipCount (?x)');\n          |                   ^\n      215 |       \n      216 |       // Verify rules section\n      217 |       expect(kif).toContain(';; Rules');\n\n      at Object.toContain (tests/unit/data-export.test.js:214:19)\n\n  ‚óè UltraLink Data Export ‚Ä∫ KIF Format Export ‚Ä∫ should handle complex entity attributes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(numeric test-entity 42)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.066Z\n    ;; Entities and their attributes\n    (instance test-entity Complex_type)\n    (name with spaces test-entity \\\"Test Entity\\\")\n    (numeric test-entity \\\"42\\\")\n    (boolean test-entity \\\"true\\\")\n    (nested.property test-entity \\\"nested value\\\")\n    (special\\\"characters test-entity \\\"value with \\\"quotes\\\"\\\")¬∑\n    ;; Relationships¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 1)\n    (= (relationshipCount UltraLinkExport) 0)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.066Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      238 |       expect(kif).toContain('(instance test-entity Complex_type)');\n      239 |       expect(kif).toContain('(name with spaces test-entity \"Test Entity\")');\n    > 240 |       expect(kif).toContain('(numeric test-entity 42)');\n          |                   ^\n      241 |       expect(kif).toContain('(boolean test-entity true)');\n      242 |       expect(kif).toContain('(nested.property test-entity \"nested value\")');\n      243 |       expect(kif).toContain('(special\"characters test-entity \"value with \\\\\"quotes\\\\\"\")');\n\n      at Object.toContain (tests/unit/data-export.test.js:240:19)\n\nPASS tests/unit/entity.test.js\n  Entity\n    Constructor\n      ‚úì should create an entity with the specified properties\n      ‚úì should create an entity with default empty attributes when not provided\n      ‚úì should handle complex attribute objects\n    Link Management\n      ‚úì should add a link with addLink method (1 ms)\n      ‚úì should use default link type when not specified\n      ‚úì should store metadata with links\n      ‚úì should add multiple links to different targets\n      ‚úì should allow multiple links to the same target with different types\n    JSON Serialization\n      ‚úì should properly serialize an entity to JSON\n      ‚úì should handle empty entities correctly\n    Edge Cases\n      ‚úì should handle entities with special characters in IDs\n      ‚úì should handle very long attribute values\n      ‚úì should maintain link order as added\n\nTest Suites: 2 failed, 1 passed, 3 total\nTests:       16 failed, 31 passed, 47 total\nSnapshots:   0 total\nTime:        0.32 s, estimated 1 s\nRan all test suites matching /tests\\/unit/i.\n",
      "exitCode": 1
    },
    {
      "name": "Integration Tests",
      "command": "npx jest tests/integration",
      "required": true,
      "status": "failed",
      "output": "\nüîç \u001b[1m\u001b[36mUltraLink Test Suite Starting\u001b[0m\n\n‚ùå \u001b[31mtests/integration/export-formats.test.js\u001b[0m - 8/14 tests passed\n‚ùå \u001b[31mtests/integration/html-website-features.test.js\u001b[0m - 1/9 tests passed\n‚ùå \u001b[31mtests/integration/research-team-export.test.js\u001b[0m - 2/5 tests passed\n‚ùå \u001b[31mtests/integration/research-team.test.js\u001b[0m - 2/12 tests passed\n‚ùå \u001b[31mtests/integration/parser-store.test.js\u001b[0m - 0/5 tests passed\n\nüìä \u001b[1m\u001b[36mTest Summary\u001b[0m\n   Total Test Suites: 5\n   Total Tests: 45\n   Passed: \u001b[32m13\u001b[0m\n   Failed: \u001b[31m32\u001b[0m\n   Time: 0.23s\n\n‚ùå \u001b[1m\u001b[31mFailed Tests Details:\u001b[0m\n\n1. \u001b[31mExport Formats Integration ‚Ä∫ JSON Export ‚Ä∫ should export JSON with vectors if requested\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ expect(received).toHaveProperty(path)\n\nExpected path: \"vector\"\nReceived path: []\n\nReceived value: {\"attributes\": {\"height\": \"15-50 feet\", \"lifespan\": \"150-200 years\", \"name\": \"Saguaro Cactus\", \"scientificName\": \"Carnegiea gigantea\", \"type\": \"plant\"}, \"id\": \"saguaro\", \"metadata\": {\"created\": \"2025-03-05T00:12:43.614Z\", \"modified\": \"2025-03-05T00:12:43.614Z\"}, \"type\": \"organism\"}\n\n2. \u001b[31mExport Formats Integration ‚Ä∫ GraphML Export ‚Ä∫ should export a valid GraphML representation\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\nReceived string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n<graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n    xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n  <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n    <node id=\\\"saguaro\\\">\n      <data key=\\\"type\\\">organism</data>\n      <data key=\\\"name\\\">Saguaro Cactus</data>\n    </node>\n    <node id=\\\"kangaroo-rat\\\">\n      <data key=\\\"type\\\">organism</data>\n      <data key=\\\"name\\\">Kangaroo Rat</data>\n    </node>\n    <node id=\\\"aridity\\\">\n      <data key=\\\"type\\\">environmental_factor</data>\n      <data key=\\\"name\\\">Aridity</data>\n    </node>\n    <edge source=\\\"saguaro\\\" target=\\\"aridity\\\">\n      <data key=\\\"type\\\">adapts_to</data>\n    </edge>\n    <edge source=\\\"kangaroo-rat\\\" target=\\\"aridity\\\">\n      <data key=\\\"type\\\">adapts_to</data>\n    </edge>\n  </graph>\n</graphml>\"\n\n3. \u001b[31mExport Formats Integration ‚Ä∫ Full Blob Export ‚Ä∫ should export and import a full data blob\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ TypeError: newUltralink.fromFullBlob is not a function\n\n4. \u001b[31mExport Formats Integration ‚Ä∫ Full Blob Export ‚Ä∫ should export a compressed full blob\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: \"string\"\nReceived: \"object\"\n\n5. \u001b[31mExport Formats Integration ‚Ä∫ KIF Format Export ‚Ä∫ should include meta-knowledge, functions, and rules when requested\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(= (creationDate UltraLinkExport)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.630Z\n;; Entities and their attributes\n(instance saguaro Organism)\n(name saguaro \\\"Saguaro Cactus\\\")\n(scientificName saguaro \\\"Carnegiea gigantea\\\")\n(type saguaro \\\"plant\\\")\n(height saguaro \\\"15-50 feet\\\")\n(lifespan saguaro \\\"150-200 years\\\")¬∑\n(instance kangaroo-rat Organism)\n(name kangaroo-rat \\\"Kangaroo Rat\\\")\n(scientificName kangaroo-rat \\\"Dipodomys\\\")\n(type kangaroo-rat \\\"mammal\\\")\n(weight kangaroo-rat \\\"100-150g\\\")\n(nocturnal kangaroo-rat \\\"true\\\")¬∑\n(instance aridity Environmental_factor)\n(name aridity \\\"Aridity\\\")\n(description aridity \\\"Extremely dry conditions with minimal rainfall\\\")\n(annualRainfall aridity \\\"3-15 inches\\\")¬∑\n;; Relationships\n(adapts_to saguaro aridity)\n(adapts_to kangaroo-rat aridity)¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 3)\n(= (relationshipCount UltraLinkExport) 2)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.630Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n6. \u001b[31mExport Formats Integration ‚Ä∫ KIF Format Export ‚Ä∫ should export complex entities with vectors and temporal data in KIF format\u001b[0m\n   üìÑ File: tests/integration/export-formats.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"(= (strength-mentions document concept1) 0.85)\"\nReceived string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n;; Generated: 2025-03-05T00:12:43.631Z\n;; Entities and their attributes\n(instance concept1 Concept)\n(name concept1 \\\"Democracy\\\")\n(definition concept1 \\\"Government by the people\\\")¬∑\n(instance concept2 Concept)\n(name concept2 \\\"Freedom\\\")\n(definition concept2 \\\"The power of self-determination\\\")¬∑\n(instance document Historical_document)\n(name document \\\"Declaration of Independence\\\")\n(date document \\\"1776-07-04\\\")\n(author document \\\"Thomas Jefferson\\\")¬∑\n;; Relationships\n(mentions document concept1)\n(mentions document concept2)\n(related_to concept1 concept2)¬∑\n;; Meta-knowledge\n(= (entityCount UltraLinkExport) 3)\n(= (relationshipCount UltraLinkExport) 3)\n(= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.631Z\\\")\n(= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n;; Functions\n(deffunction relationshipCount (?kb)\n  :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n  :return-type Integer)¬∑\n(deffunction entityCount (?kb)\n  :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n  :return-type Integer)¬∑\n;; Rules\n(defrule temporal-ordering\n  :documentation \\\"Rule for temporal ordering of events\\\"\n  (and (instance ?e1 Event)\n       (instance ?e2 Event)\n       (date ?e1 ?d1)\n       (date ?e2 ?d2)\n       (evaluate ?before (string< ?d1 ?d2)))\n  (before ?e1 ?e2))\n\"\n\n7. \u001b[31mHTML Website Features ‚Ä∫ should include zoom and pan controls\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<div class=\\\"zoom-controls\\\">\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n8. \u001b[31mHTML Website Features ‚Ä∫ should include clear filters button\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<button class=\\\"btn\\\" id=\\\"clear-filters\\\">Clear Filters</button>\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n9. \u001b[31mHTML Website Features ‚Ä∫ should use responsive SVG with viewBox\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \".attr('width', '100%')\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n10. \u001b[31mHTML Website Features ‚Ä∫ should use title as fallback for name\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"const name = entity.attributes.name || entity.attributes.title || entity.id;\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n11. \u001b[31mHTML Website Features ‚Ä∫ should have improved entity detail pages with sections\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<div class=\\\"entity-section\\\">\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>John Doe - HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 20px;\n      background: var(--background);\n      color: var(--text);\n      max-width: 800px;\n      margin: 0 auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .back-link {\n      display: inline-block;\n      margin-bottom: 20px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n      margin-bottom: 20px;\n    }\n    .attributes {\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      padding: 16px;\n      margin-bottom: 20px;\n    }\n    .attribute-row {\n      display: grid;\n      grid-template-columns: 200px 1fr;\n      padding: 8px 0;\n      border-bottom: 1px solid var(--border);\n    }\n    .attribute-row:last-child {\n      border-bottom: none;\n    }\n    .attribute-key {\n      color: var(--accent);\n    }\n    .relationship-list {\n      list-style: none;\n      padding: 0;\n    }\n    .relationship-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .relationship-attributes {\n      margin-top: 4px;\n      font-size: 0.9em;\n      color: var(--accent);\n    }\n  </style>\n</head>\n<body>\n  <a href=\\\"index.html\\\" class=\\\"back-link\\\">‚Üê Back to Graph</a>\n  <h1>John Doe</h1>\n  <div class=\\\"entity-type\\\">person</div>¬∑¬∑¬∑\n  <h3>Attributes</h3>\n  <div class=\\\"attributes\\\">¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"attribute-row\\\">\n        <div class=\\\"attribute-key\\\">name</div>\n        <div class=\\\"attribute-value\\\">John Doe</div>\n      </div>¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"attribute-row\\\">\n        <div class=\\\"attribute-key\\\">age</div>\n        <div class=\\\"attribute-value\\\">30</div>\n      </div>¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"attribute-row\\\">\n        <div class=\\\"attribute-key\\\">email</div>\n        <div class=\\\"attribute-value\\\">john@example.com</div>\n      </div>¬∑¬∑¬∑¬∑¬∑\n  </div>¬∑\n  <h3>Relationships</h3>\n  <h4>Outgoing</h4><ul class=\\\"relationship-list\\\"><li class=\\\"relationship-item\\\">\n        <strong>manages</strong> ‚Üí <a href=\\\"entity2.html\\\">Project Alpha</a><div class=\\\"relationship-attributes\\\"><small><strong>role:</strong> Project Manager</small> <small><strong>since:</strong> 2023-01-15</small> </div></li><li class=\\\"relationship-item\\\">\n        <strong>created</strong> ‚Üí <a href=\\\"entity3.html\\\">entity3</a><div class=\\\"relationship-attributes\\\"><small><strong>date:</strong> 2023-02-10</small> </div></li></ul>\n</body>\n</html>\"\n\n12. \u001b[31mHTML Website Features ‚Ä∫ should generate different themes correctly\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"--text-color: #e8eaed\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>Dark Theme Test</title>\n  <style>\n    :root {\n      --background: #1a1a1a;\n      --text: #ffffff;\n      --link: #4a9eff;\n      --accent: #666666;\n      --border: #333333;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>Dark Theme Test</h2>\n      <p>Testing dark theme</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n13. \u001b[31mHTML Website Features ‚Ä∫ should support interactive relationship navigation\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"window.selectEntityById = (id) => {\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n14. \u001b[31mHTML Website Features ‚Ä∫ should properly handle entities without name or title\u001b[0m\n   üìÑ File: tests/integration/html-website-features.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \".text(d => d.attributes.name || d.attributes.title || d.id)\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>HTML Features Test</title>\n  <style>\n    :root {\n      --background: #ffffff;\n      --text: #000000;\n      --link: #0066cc;\n      --accent: #666666;\n      --border: #dddddd;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>HTML Features Test</h2>\n      <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n            <a href=\\\"entity1.html\\\">\n              John Doe\n            </a>\n            <div class=\\\"entity-type\\\">person</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n            <a href=\\\"entity2.html\\\">\n              Project Alpha\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n            <a href=\\\"entity3.html\\\">\n              entity3\n            </a>\n            <div class=\\\"entity-type\\\">resource</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n          links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n15. \u001b[31mResearch Team Export Tests ‚Ä∫ HTML Website Export\u001b[0m\n   üìÑ File: tests/integration/research-team-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"styles/academic.css\"\nReceived string:    \"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>Research Team Portal</title>\n  <style>\n    :root {\n      --background: #f5f5f5;\n      --text: #333333;\n      --link: #990000;\n      --accent: #666666;\n      --border: #cccccc;\n    }\n    body {\n      font-family: system-ui, -apple-system, sans-serif;\n      margin: 0;\n      padding: 0;\n      background: var(--background);\n      color: var(--text);\n    }\n    .container {\n      display: grid;\n      grid-template-columns: 300px 1fr;\n      height: 100vh;\n    }\n    .sidebar {\n      padding: 20px;\n      border-right: 1px solid var(--border);\n      overflow-y: auto;\n    }\n    .main {\n      padding: 20px;\n      overflow-y: auto;\n    }\n    h1, h2, h3, h4 {\n      color: var(--text);\n      margin-top: 0;\n    }\n    a {\n      color: var(--link);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    .entity-list {\n      list-style: none;\n      padding: 0;\n    }\n    .entity-item {\n      padding: 8px;\n      margin: 4px 0;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .entity-type {\n      color: var(--accent);\n      font-size: 0.9em;\n    }\n    #graph {\n      width: 100%;\n      height: 600px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n    }\n    .search-box {\n      margin-bottom: 20px;\n    }\n    #search-input {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid var(--border);\n      border-radius: 4px;\n      background: var(--background);\n      color: var(--text);\n    }\n  </style>\n  <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n</head>\n<body>\n  <div class=\\\"container\\\">\n    <div class=\\\"sidebar\\\">\n      <h2>Research Team Portal</h2>\n      <p>Interactive visualization of research team relationships</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <div class=\\\"search-box\\\">\n        <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n      </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      <h3>Entities</h3>\n      <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"alice\\\" data-type=\\\"researcher\\\">\n            <a href=\\\"alice.html\\\">\n              Alice Chen\n            </a>\n            <div class=\\\"entity-type\\\">researcher</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"bob\\\" data-type=\\\"researcher\\\">\n            <a href=\\\"bob.html\\\">\n              Bob Smith\n            </a>\n            <div class=\\\"entity-type\\\">researcher</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"desert-ecology\\\" data-type=\\\"project\\\">\n            <a href=\\\"desert-ecology.html\\\">\n              Desert Ecology Study\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <li class=\\\"entity-item\\\" data-id=\\\"climate-impact\\\" data-type=\\\"project\\\">\n            <a href=\\\"climate-impact.html\\\">\n              Climate Impact Assessment\n            </a>\n            <div class=\\\"entity-type\\\">project</div>\n          </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </ul>\n    </div>\n    <div class=\\\"main\\\">\n      <div id=\\\"graph\\\"></div>\n      <script>\n        // Graph visualization code\n        const data = {\n          nodes: [{\\\"id\\\":\\\"alice\\\",\\\"name\\\":\\\"Alice Chen\\\",\\\"type\\\":\\\"researcher\\\"},{\\\"id\\\":\\\"bob\\\",\\\"name\\\":\\\"Bob Smith\\\",\\\"type\\\":\\\"researcher\\\"},{\\\"id\\\":\\\"desert-ecology\\\",\\\"name\\\":\\\"Desert Ecology Study\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"climate-impact\\\",\\\"name\\\":\\\"Climate Impact Assessment\\\",\\\"type\\\":\\\"project\\\"}],\n          links: [{\\\"source\\\":\\\"alice\\\",\\\"target\\\":\\\"desert-ecology\\\",\\\"type\\\":\\\"leads\\\"},{\\\"source\\\":\\\"alice\\\",\\\"target\\\":\\\"climate-impact\\\",\\\"type\\\":\\\"contributes_to\\\"},{\\\"source\\\":\\\"bob\\\",\\\"target\\\":\\\"desert-ecology\\\",\\\"type\\\":\\\"works_on\\\"},{\\\"source\\\":\\\"bob\\\",\\\"target\\\":\\\"alice\\\",\\\"type\\\":\\\"reports_to\\\"}]\n        };¬∑\n        const width = document.getElementById('graph').clientWidth;\n        const height = 600;¬∑\n        const simulation = d3.forceSimulation(data.nodes)\n          .force('link', d3.forceLink(data.links).id(d => d.id))\n          .force('charge', d3.forceManyBody().strength(-100))\n          .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n        const svg = d3.select('#graph')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', height);¬∑\n        const link = svg.append('g')\n          .selectAll('line')\n          .data(data.links)\n          .join('line')\n          .attr('stroke', 'var(--border)')\n          .attr('stroke-width', 1);¬∑\n        const node = svg.append('g')\n          .selectAll('circle')\n          .data(data.nodes)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'var(--link)')\n          .call(drag(simulation));¬∑\n        node.append('title')\n          .text(d => d.name);¬∑\n        simulation.on('tick', () => {\n          link\n            .attr('x1', d => d.source.x)\n            .attr('y1', d => d.source.y)\n            .attr('x2', d => d.target.x)\n            .attr('y2', d => d.target.y);¬∑\n          node\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y);\n        });¬∑\n        function drag(simulation) {\n          function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          return d3.drag()\n            .on('start', dragstarted)\n            .on('drag', dragged)\n            .on('end', dragended);\n        }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        const entityList = document.getElementById('entity-list');\n        const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n        searchInput.addEventListener('input', function() {\n          const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          entityItems.forEach(item => {\n            const id = item.getAttribute('data-id').toLowerCase();\n            const type = item.getAttribute('data-type').toLowerCase();\n            const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n              item.style.display = '';\n            } else {\n              item.style.display = 'none';\n            }\n          });\n        });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n      </script>\n    </div>\n  </div>\n</body>\n</html>\"\n\n16. \u001b[31mResearch Team Export Tests ‚Ä∫ GraphML Export\u001b[0m\n   üìÑ File: tests/integration/research-team-export.test.js\n   üî¥ expect(received).toContain(expected) // indexOf\n\nExpected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\nReceived string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n<graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n    xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n  <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"role\\\" for=\\\"node\\\" attr.name=\\\"role\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"department\\\" for=\\\"node\\\" attr.name=\\\"department\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"email\\\" for=\\\"node\\\" attr.name=\\\"email\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"publications\\\" for=\\\"node\\\" attr.name=\\\"publications\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"title\\\" for=\\\"node\\\" attr.name=\\\"title\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"startDate\\\" for=\\\"node\\\" attr.name=\\\"startDate\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"budget\\\" for=\\\"node\\\" attr.name=\\\"budget\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"status\\\" for=\\\"node\\\" attr.name=\\\"status\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"startDate\\\" for=\\\"edge\\\" attr.name=\\\"startDate\\\" attr.type=\\\"string\\\"/>\n  <key id=\\\"role\\\" for=\\\"edge\\\" attr.name=\\\"role\\\" attr.type=\\\"string\\\"/>\n  <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n    <node id=\\\"alice\\\">\n      <data key=\\\"type\\\">researcher</data>\n      <data key=\\\"name\\\">Alice Chen</data>\n      <data key=\\\"role\\\">Principal Investigator</data>\n      <data key=\\\"department\\\">Biology</data>\n      <data key=\\\"email\\\">alice.chen@example.edu</data>\n      <data key=\\\"publications\\\">42</data>\n    </node>\n    <node id=\\\"bob\\\">\n      <data key=\\\"type\\\">researcher</data>\n      <data key=\\\"name\\\">Bob Smith</data>\n      <data key=\\\"role\\\">Postdoc</data>\n      <data key=\\\"department\\\">Biology</data>\n      <data key=\\\"email\\\">bob.smith@example.edu</data>\n      <data key=\\\"publications\\\">18</data>\n    </node>\n    <node id=\\\"desert-ecology\\\">\n      <data key=\\\"type\\\">project</data>\n      <data key=\\\"name\\\">Desert Ecology Study</data>\n      <data key=\\\"title\\\">Desert Ecology Study</data>\n      <data key=\\\"startDate\\\">2023-01-15</data>\n      <data key=\\\"budget\\\">150000</data>\n      <data key=\\\"status\\\">Active</data>\n    </node>\n    <node id=\\\"climate-impact\\\">\n      <data key=\\\"type\\\">project</data>\n      <data key=\\\"name\\\">Climate Impact Assessment</data>\n      <data key=\\\"title\\\">Climate Impact Assessment</data>\n      <data key=\\\"startDate\\\">2022-08-10</data>\n      <data key=\\\"budget\\\">220000</data>\n      <data key=\\\"status\\\">Active</data>\n    </node>\n    <edge source=\\\"alice\\\" target=\\\"desert-ecology\\\">\n      <data key=\\\"type\\\">leads</data>\n      <data key=\\\"startDate\\\">2023-01-15</data>\n      <data key=\\\"role\\\">Principal Investigator</data>\n    </edge>\n    <edge source=\\\"alice\\\" target=\\\"climate-impact\\\">\n      <data key=\\\"type\\\">contributes_to</data>\n      <data key=\\\"startDate\\\">2022-10-01</data>\n      <data key=\\\"role\\\">Consultant</data>\n    </edge>\n    <edge source=\\\"bob\\\" target=\\\"desert-ecology\\\">\n      <data key=\\\"type\\\">works_on</data>\n      <data key=\\\"startDate\\\">2023-02-01</data>\n      <data key=\\\"role\\\">Data Analyst</data>\n    </edge>\n    <edge source=\\\"bob\\\" target=\\\"alice\\\">\n      <data key=\\\"type\\\">reports_to</data>\n      <data key=\\\"startDate\\\">2023-02-01</data>\n    </edge>\n  </graph>\n</graphml>\"\n\n17. \u001b[31mResearch Team Export Tests ‚Ä∫ Full Blob Export\u001b[0m\n   üìÑ File: tests/integration/research-team-export.test.js\n   üî¥ TypeError: newUltralink.fromFullBlob is not a function\n\n18. \u001b[31mResearch Team Integration Tests ‚Ä∫ should identify all project leads\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: 0\n\n19. \u001b[31mResearch Team Integration Tests ‚Ä∫ should find all mentorship relationships\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: 0\n\n20. \u001b[31mResearch Team Integration Tests ‚Ä∫ should identify equipment usage\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 4\nReceived: 0\n\n21. \u001b[31mResearch Team Integration Tests ‚Ä∫ should find all publications by author\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 5\n\n22. \u001b[31mResearch Team Integration Tests ‚Ä∫ should identify knowledge area expertise\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 7\nReceived: 0\n\n23. \u001b[31mResearch Team Integration Tests ‚Ä∫ should find project focus areas\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0\n\n24. \u001b[31mResearch Team Integration Tests ‚Ä∫ should create valid subset of people data\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ TypeError: ultralink.createSubset is not a function\n\n25. \u001b[31mResearch Team Integration Tests ‚Ä∫ should create valid subset of project data\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ TypeError: ultralink.createSubset is not a function\n\n26. \u001b[31mResearch Team Integration Tests ‚Ä∫ should create valid subset of publication data\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ TypeError: ultralink.createSubset is not a function\n\n27. \u001b[31mResearch Team Integration Tests ‚Ä∫ should handle invalid subset type\u001b[0m\n   üìÑ File: tests/integration/research-team.test.js\n   üî¥ expect(received).toThrow(expected)\n\nExpected substring: \"Unknown aspect: invalid\"\nReceived message:   \"ultralink.createSubset is not a function\"\n\n      91 |   test('should handle invalid subset type', () => {\n      92 |     expect(() => {\n    > 93 |       ultralink.createSubset('invalid');\n         |                 ^\n      94 |     }).toThrow('Unknown aspect: invalid');\n      95 |   });\n      96 | });\n\n28. \u001b[31mUltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should parse Obsidian-style links and create corresponding entities\u001b[0m\n   üìÑ File: tests/integration/parser-store.test.js\n   üî¥ TypeError: EntityStore is not a constructor\n   üî¥ TypeError: Cannot read properties of undefined (reading 'clear')\n\n29. \u001b[31mUltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should handle documents with duplicate links\u001b[0m\n   üìÑ File: tests/integration/parser-store.test.js\n   üî¥ TypeError: EntityStore is not a constructor\n   üî¥ TypeError: Cannot read properties of undefined (reading 'clear')\n\n30. \u001b[31mUltraLinkParser and EntityStore Integration ‚Ä∫ Custom Parser Integration ‚Ä∫ should use custom parsers to extract links in different formats\u001b[0m\n   üìÑ File: tests/integration/parser-store.test.js\n   üî¥ TypeError: EntityStore is not a constructor\n   üî¥ TypeError: Cannot read properties of undefined (reading 'clear')\n\n31. \u001b[31mUltraLinkParser and EntityStore Integration ‚Ä∫ Multi-Document Integration ‚Ä∫ should correctly maintain entity relationships across multiple documents\u001b[0m\n   üìÑ File: tests/integration/parser-store.test.js\n   üî¥ TypeError: EntityStore is not a constructor\n   üî¥ TypeError: Cannot read properties of undefined (reading 'clear')\n\n32. \u001b[31mUltraLinkParser and EntityStore Integration ‚Ä∫ Error Handling ‚Ä∫ should gracefully handle malformed input\u001b[0m\n   üìÑ File: tests/integration/parser-store.test.js\n   üî¥ TypeError: EntityStore is not a constructor\n   üî¥ TypeError: Cannot read properties of undefined (reading 'clear')\n\n‚ùó \u001b[33mCheck the failed tests and fix the issues before proceeding.\u001b[0m\n\n",
      "error": "Command failed: npx jest tests/integration\nFAIL tests/integration/export-formats.test.js\n  Export Formats Integration\n    ‚úì HTML Website export format (3 ms)\n    JSON Export\n      ‚úì should export a complete and valid JSON representation (2 ms)\n      ‚úï should export JSON with vectors if requested (1 ms)\n    GraphML Export\n      ‚úï should export a valid GraphML representation (1 ms)\n      ‚úì should export GraphML with attributes if requested (1 ms)\n    CSV Export\n      ‚úì should export valid CSV files for entities and relationships (1 ms)\n    Obsidian Export\n      ‚úì should export a complete Obsidian knowledge base (1 ms)\n      ‚úì should include backlinks if requested\n    HTML Website Export\n      ‚úì should export a complete HTML website (1 ms)\n    Full Blob Export\n      ‚úï should export and import a full data blob (2 ms)\n      ‚úï should export a compressed full blob (1 ms)\n    KIF Format Export\n      ‚úì should export to KIF format with basic content (1 ms)\n      ‚úï should include meta-knowledge, functions, and rules when requested\n      ‚úï should export complex entities with vectors and temporal data in KIF format (1 ms)\n\n  ‚óè Export Formats Integration ‚Ä∫ JSON Export ‚Ä∫ should export JSON with vectors if requested\n\n    expect(received).toHaveProperty(path)\n\n    Expected path: \"vector\"\n    Received path: []\n\n    Received value: {\"attributes\": {\"height\": \"15-50 feet\", \"lifespan\": \"150-200 years\", \"name\": \"Saguaro Cactus\", \"scientificName\": \"Carnegiea gigantea\", \"type\": \"plant\"}, \"id\": \"saguaro\", \"metadata\": {\"created\": \"2025-03-05T00:12:43.614Z\", \"modified\": \"2025-03-05T00:12:43.614Z\"}, \"type\": \"organism\"}\n\n      151 |       // Verify vectors included\n      152 |       const saguaro = json.entities.find(e => e.id === 'saguaro');\n    > 153 |       expect(saguaro).toHaveProperty('vector');\n          |                       ^\n      154 |       expect(Array.isArray(saguaro.vector)).toBe(true);\n      155 |       expect(saguaro.vector.length).toBe(3);\n      156 |       expect(saguaro.vector[0]).toBeCloseTo(0.1, 5);\n\n      at Object.toHaveProperty (tests/integration/export-formats.test.js:153:23)\n\n  ‚óè Export Formats Integration ‚Ä∫ GraphML Export ‚Ä∫ should export a valid GraphML representation\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\n    Received string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n    <graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n        xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n        xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n         http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n      <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n        <node id=\\\"saguaro\\\">\n          <data key=\\\"type\\\">organism</data>\n          <data key=\\\"name\\\">Saguaro Cactus</data>\n        </node>\n        <node id=\\\"kangaroo-rat\\\">\n          <data key=\\\"type\\\">organism</data>\n          <data key=\\\"name\\\">Kangaroo Rat</data>\n        </node>\n        <node id=\\\"aridity\\\">\n          <data key=\\\"type\\\">environmental_factor</data>\n          <data key=\\\"name\\\">Aridity</data>\n        </node>\n        <edge source=\\\"saguaro\\\" target=\\\"aridity\\\">\n          <data key=\\\"type\\\">adapts_to</data>\n        </edge>\n        <edge source=\\\"kangaroo-rat\\\" target=\\\"aridity\\\">\n          <data key=\\\"type\\\">adapts_to</data>\n        </edge>\n      </graph>\n    </graphml>\"\n\n      170 |       expect(graphml).toContain('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');\n      171 |       expect(graphml).toContain('<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"');\n    > 172 |       expect(graphml).toContain('<graph id=\"G\" edgedefault=\"directed\">');\n          |                       ^\n      173 |       \n      174 |       // Verify nodes\n      175 |       expect(graphml).toContain('<node id=\"saguaro\">');\n\n      at Object.toContain (tests/integration/export-formats.test.js:172:23)\n\n  ‚óè Export Formats Integration ‚Ä∫ Full Blob Export ‚Ä∫ should export and import a full data blob\n\n    TypeError: newUltralink.fromFullBlob is not a function\n\n      339 |       // Create a new instance and import the blob\n      340 |       const newUltralink = new UltraLink();\n    > 341 |       newUltralink.fromFullBlob(blob);\n          |                    ^\n      342 |       \n      343 |       // Verify entities were imported\n      344 |       expect(newUltralink.entities.size).toBe(ultralink.entities.size);\n\n      at Object.fromFullBlob (tests/integration/export-formats.test.js:341:20)\n\n  ‚óè Export Formats Integration ‚Ä∫ Full Blob Export ‚Ä∫ should export a compressed full blob\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"string\"\n    Received: \"object\"\n\n      356 |       \n      357 |       // Verify blob is a string\n    > 358 |       expect(typeof compressedBlob).toBe('string');\n          |                                     ^\n      359 |       \n      360 |       // Save for inspection\n      361 |       const outputDir = getSystemOutputPath(integrationSystem, 'full-blob-compressed');\n\n      at Object.toBe (tests/integration/export-formats.test.js:358:37)\n\n  ‚óè Export Formats Integration ‚Ä∫ KIF Format Export ‚Ä∫ should include meta-knowledge, functions, and rules when requested\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(= (creationDate UltraLinkExport)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.630Z\n    ;; Entities and their attributes\n    (instance saguaro Organism)\n    (name saguaro \\\"Saguaro Cactus\\\")\n    (scientificName saguaro \\\"Carnegiea gigantea\\\")\n    (type saguaro \\\"plant\\\")\n    (height saguaro \\\"15-50 feet\\\")\n    (lifespan saguaro \\\"150-200 years\\\")¬∑\n    (instance kangaroo-rat Organism)\n    (name kangaroo-rat \\\"Kangaroo Rat\\\")\n    (scientificName kangaroo-rat \\\"Dipodomys\\\")\n    (type kangaroo-rat \\\"mammal\\\")\n    (weight kangaroo-rat \\\"100-150g\\\")\n    (nocturnal kangaroo-rat \\\"true\\\")¬∑\n    (instance aridity Environmental_factor)\n    (name aridity \\\"Aridity\\\")\n    (description aridity \\\"Extremely dry conditions with minimal rainfall\\\")\n    (annualRainfall aridity \\\"3-15 inches\\\")¬∑\n    ;; Relationships\n    (adapts_to saguaro aridity)\n    (adapts_to kangaroo-rat aridity)¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 3)\n    (= (relationshipCount UltraLinkExport) 2)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.630Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      453 |       // Verify meta-knowledge\n      454 |       expect(kifComplete).toContain(';; Meta-knowledge');\n    > 455 |       expect(kifComplete).toContain('(= (creationDate UltraLinkExport)');\n          |                           ^\n      456 |       expect(kifComplete).toContain('(= (entityCount UltraLinkExport)');\n      457 |       expect(kifComplete).toContain('(= (relationshipCount UltraLinkExport)');\n      458 |       \n\n      at Object.toContain (tests/integration/export-formats.test.js:455:27)\n\n  ‚óè Export Formats Integration ‚Ä∫ KIF Format Export ‚Ä∫ should export complex entities with vectors and temporal data in KIF format\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"(= (strength-mentions document concept1) 0.85)\"\n    Received string:    \";; UltraLink Knowledge Interchange Format (KIF) Export\n    ;; Generated: 2025-03-05T00:12:43.631Z\n    ;; Entities and their attributes\n    (instance concept1 Concept)\n    (name concept1 \\\"Democracy\\\")\n    (definition concept1 \\\"Government by the people\\\")¬∑\n    (instance concept2 Concept)\n    (name concept2 \\\"Freedom\\\")\n    (definition concept2 \\\"The power of self-determination\\\")¬∑\n    (instance document Historical_document)\n    (name document \\\"Declaration of Independence\\\")\n    (date document \\\"1776-07-04\\\")\n    (author document \\\"Thomas Jefferson\\\")¬∑\n    ;; Relationships\n    (mentions document concept1)\n    (mentions document concept2)\n    (related_to concept1 concept2)¬∑\n    ;; Meta-knowledge\n    (= (entityCount UltraLinkExport) 3)\n    (= (relationshipCount UltraLinkExport) 3)\n    (= (exportDate UltraLinkExport) \\\"2025-03-05T00:12:43.631Z\\\")\n    (= (exportVersion UltraLinkExport) \\\"1.0\\\")¬∑\n    ;; Functions\n    (deffunction relationshipCount (?kb)\n      :documentation \\\"Returns the total number of relationships in a knowledge base\\\"\n      :return-type Integer)¬∑\n    (deffunction entityCount (?kb)\n      :documentation \\\"Returns the total number of entities in a knowledge base\\\"\n      :return-type Integer)¬∑\n    ;; Rules\n    (defrule temporal-ordering\n      :documentation \\\"Rule for temporal ordering of events\\\"\n      (and (instance ?e1 Event)\n           (instance ?e2 Event)\n           (date ?e1 ?d1)\n           (date ?e2 ?d2)\n           (evaluate ?before (string< ?d1 ?d2)))\n      (before ?e1 ?e2))\n    \"\n\n      531 |       \n      532 |       // Verify relationship attributes\n    > 533 |       expect(kif).toContain('(= (strength-mentions document concept1) 0.85)');\n          |                   ^\n      534 |       expect(kif).toContain('(= (first_occurrence-mentions document concept1) \"paragraph 1\")');\n      535 |       expect(kif).toContain('(= (similarity-related_to concept1 concept2) 0.65)');\n      536 |     });\n\n      at Object.toContain (tests/integration/export-formats.test.js:533:19)\n\nFAIL tests/integration/html-website-features.test.js\n  HTML Website Features\n    ‚úï should include zoom and pan controls (1 ms)\n    ‚úï should include clear filters button\n    ‚úï should use responsive SVG with viewBox (1 ms)\n    ‚úï should use title as fallback for name (1 ms)\n    ‚úï should have improved entity detail pages with sections\n    ‚úï should generate different themes correctly (1 ms)\n    ‚úï should support interactive relationship navigation (1 ms)\n    ‚úï should properly handle entities without name or title\n    ‚úì should include relationship attributes in details view (1 ms)\n\n  ‚óè HTML Website Features ‚Ä∫ should include zoom and pan controls\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<div class=\\\"zoom-controls\\\">\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      74 |   test('should include zoom and pan controls', () => {\n      75 |     // Check for zoom controls in index.html\n    > 76 |     expect(htmlFiles['index.html']).toContain('<div class=\"zoom-controls\">');\n         |                                     ^\n      77 |     expect(htmlFiles['index.html']).toContain('<button class=\"zoom-btn\" id=\"zoom-in\">+</button>');\n      78 |     expect(htmlFiles['index.html']).toContain('<button class=\"zoom-btn\" id=\"zoom-reset\">‚ü≥</button>');\n      79 |     expect(htmlFiles['index.html']).toContain('<button class=\"zoom-btn\" id=\"zoom-out\">‚àí</button>');\n\n      at Object.toContain (tests/integration/html-website-features.test.js:76:37)\n\n  ‚óè HTML Website Features ‚Ä∫ should include clear filters button\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<button class=\\\"btn\\\" id=\\\"clear-filters\\\">Clear Filters</button>\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      92 |   test('should include clear filters button', () => {\n      93 |     // Check for clear filters button\n    > 94 |     expect(htmlFiles['index.html']).toContain('<button class=\"btn\" id=\"clear-filters\">Clear Filters</button>');\n         |                                     ^\n      95 |     \n      96 |     // Check for event handler\n      97 |     expect(htmlFiles['index.html']).toContain('clearFiltersBtn.addEventListener');\n\n      at Object.toContain (tests/integration/html-website-features.test.js:94:37)\n\n  ‚óè HTML Website Features ‚Ä∫ should use responsive SVG with viewBox\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \".attr('width', '100%')\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      102 |   test('should use responsive SVG with viewBox', () => {\n      103 |     // Check for responsive SVG attributes\n    > 104 |     expect(htmlFiles['index.html']).toContain('.attr(\\'width\\', \\'100%\\')');\n          |                                     ^\n      105 |     expect(htmlFiles['index.html']).toContain('.attr(\\'height\\', \\'100%\\')');\n      106 |     expect(htmlFiles['index.html']).toContain('.attr(\\'viewBox\\', [0, 0, width, height])');\n      107 |     expect(htmlFiles['index.html']).toContain('.attr(\\'preserveAspectRatio\\', \\'xMidYMid meet\\')');\n\n      at Object.toContain (tests/integration/html-website-features.test.js:104:37)\n\n  ‚óè HTML Website Features ‚Ä∫ should use title as fallback for name\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"const name = entity.attributes.name || entity.attributes.title || entity.id;\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      114 |   test('should use title as fallback for name', () => {\n      115 |     // Check index.html for title fallback in entity list rendering\n    > 116 |     expect(htmlFiles['index.html']).toContain('const name = entity.attributes.name || entity.attributes.title || entity.id;');\n          |                                     ^\n      117 |     \n      118 |     // Check entity2.html (project with title but no name)\n      119 |     expect(htmlFiles['entity2.html']).toContain('<title>Project Alpha - HTML Features Test</title>');\n\n      at Object.toContain (tests/integration/html-website-features.test.js:116:37)\n\n  ‚óè HTML Website Features ‚Ä∫ should have improved entity detail pages with sections\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<div class=\\\"entity-section\\\">\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>John Doe - HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 20px;\n          background: var(--background);\n          color: var(--text);\n          max-width: 800px;\n          margin: 0 auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .back-link {\n          display: inline-block;\n          margin-bottom: 20px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n          margin-bottom: 20px;\n        }\n        .attributes {\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          padding: 16px;\n          margin-bottom: 20px;\n        }\n        .attribute-row {\n          display: grid;\n          grid-template-columns: 200px 1fr;\n          padding: 8px 0;\n          border-bottom: 1px solid var(--border);\n        }\n        .attribute-row:last-child {\n          border-bottom: none;\n        }\n        .attribute-key {\n          color: var(--accent);\n        }\n        .relationship-list {\n          list-style: none;\n          padding: 0;\n        }\n        .relationship-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .relationship-attributes {\n          margin-top: 4px;\n          font-size: 0.9em;\n          color: var(--accent);\n        }\n      </style>\n    </head>\n    <body>\n      <a href=\\\"index.html\\\" class=\\\"back-link\\\">‚Üê Back to Graph</a>\n      <h1>John Doe</h1>\n      <div class=\\\"entity-type\\\">person</div>¬∑¬∑¬∑\n      <h3>Attributes</h3>\n      <div class=\\\"attributes\\\">¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"attribute-row\\\">\n            <div class=\\\"attribute-key\\\">name</div>\n            <div class=\\\"attribute-value\\\">John Doe</div>\n          </div>¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"attribute-row\\\">\n            <div class=\\\"attribute-key\\\">age</div>\n            <div class=\\\"attribute-value\\\">30</div>\n          </div>¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"attribute-row\\\">\n            <div class=\\\"attribute-key\\\">email</div>\n            <div class=\\\"attribute-value\\\">john@example.com</div>\n          </div>¬∑¬∑¬∑¬∑¬∑\n      </div>¬∑\n      <h3>Relationships</h3>\n      <h4>Outgoing</h4><ul class=\\\"relationship-list\\\"><li class=\\\"relationship-item\\\">\n            <strong>manages</strong> ‚Üí <a href=\\\"entity2.html\\\">Project Alpha</a><div class=\\\"relationship-attributes\\\"><small><strong>role:</strong> Project Manager</small> <small><strong>since:</strong> 2023-01-15</small> </div></li><li class=\\\"relationship-item\\\">\n            <strong>created</strong> ‚Üí <a href=\\\"entity3.html\\\">entity3</a><div class=\\\"relationship-attributes\\\"><small><strong>date:</strong> 2023-02-10</small> </div></li></ul>\n    </body>\n    </html>\"\n\n      123 |   test('should have improved entity detail pages with sections', () => {\n      124 |     // Check entity1.html for entity sections\n    > 125 |     expect(htmlFiles['entity1.html']).toContain('<div class=\"entity-section\">');\n          |                                       ^\n      126 |     \n      127 |     // Check for attribute table styling\n      128 |     expect(htmlFiles['entity1.html']).toContain('class=\"attribute-table\"');\n\n      at Object.toContain (tests/integration/html-website-features.test.js:125:39)\n\n  ‚óè HTML Website Features ‚Ä∫ should generate different themes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"--text-color: #e8eaed\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>Dark Theme Test</title>\n      <style>\n        :root {\n          --background: #1a1a1a;\n          --text: #ffffff;\n          --link: #4a9eff;\n          --accent: #666666;\n          --border: #333333;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>Dark Theme Test</h2>\n          <p>Testing dark theme</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      143 |     \n      144 |     // Check dark theme specific CSS\n    > 145 |     expect(darkThemeFiles['index.html']).toContain('--text-color: #e8eaed');\n          |                                          ^\n      146 |     expect(darkThemeFiles['index.html']).toContain('--bg-color: #202124');\n      147 |     expect(darkThemeFiles['index.html']).toContain('background: rgba(32, 33, 36, 0.8)');\n      148 |     \n\n      at Object.toContain (tests/integration/html-website-features.test.js:145:42)\n\n  ‚óè HTML Website Features ‚Ä∫ should support interactive relationship navigation\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"window.selectEntityById = (id) => {\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      161 |   test('should support interactive relationship navigation', () => {\n      162 |     // Check for interactive relationship links\n    > 163 |     expect(htmlFiles['index.html']).toContain('window.selectEntityById = (id) => {');\n          |                                     ^\n      164 |     expect(htmlFiles['index.html']).toContain('href=\"javascript:void(0)\" onclick=\"selectEntityById');\n      165 |     \n      166 |     // Check that node is highlighted and centered on selection\n\n      at Object.toContain (tests/integration/html-website-features.test.js:163:37)\n\n  ‚óè HTML Website Features ‚Ä∫ should properly handle entities without name or title\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \".text(d => d.attributes.name || d.attributes.title || d.id)\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>HTML Features Test</title>\n      <style>\n        :root {\n          --background: #ffffff;\n          --text: #000000;\n          --link: #0066cc;\n          --accent: #666666;\n          --border: #dddddd;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>HTML Features Test</h2>\n          <p>Testing HTML website features</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity1\\\" data-type=\\\"person\\\">\n                <a href=\\\"entity1.html\\\">\n                  John Doe\n                </a>\n                <div class=\\\"entity-type\\\">person</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity2\\\" data-type=\\\"project\\\">\n                <a href=\\\"entity2.html\\\">\n                  Project Alpha\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"entity3\\\" data-type=\\\"resource\\\">\n                <a href=\\\"entity3.html\\\">\n                  entity3\n                </a>\n                <div class=\\\"entity-type\\\">resource</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"entity1\\\",\\\"name\\\":\\\"John Doe\\\",\\\"type\\\":\\\"person\\\"},{\\\"id\\\":\\\"entity2\\\",\\\"name\\\":\\\"Project Alpha\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"entity3\\\",\\\"name\\\":\\\"entity3\\\",\\\"type\\\":\\\"resource\\\"}],\n              links: [{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity2\\\",\\\"type\\\":\\\"manages\\\"},{\\\"source\\\":\\\"entity1\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"created\\\"},{\\\"source\\\":\\\"entity2\\\",\\\"target\\\":\\\"entity3\\\",\\\"type\\\":\\\"contains\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      175 |     \n      176 |     // Make sure it's still referenced correctly in index page\n    > 177 |     expect(htmlFiles['index.html']).toContain('.text(d => d.attributes.name || d.attributes.title || d.id)');\n          |                                     ^\n      178 |   });\n      179 |   \n      180 |   test('should include relationship attributes in details view', () => {\n\n      at Object.toContain (tests/integration/html-website-features.test.js:177:37)\n\nFAIL tests/integration/research-team-export.test.js\n  Research Team Export Tests\n    ‚úï HTML Website Export (1 ms)\n    ‚úï GraphML Export (1 ms)\n    ‚úì Obsidian Export (1 ms)\n    ‚úì CSV Export (1 ms)\n    ‚úï Full Blob Export (1 ms)\n\n  ‚óè Research Team Export Tests ‚Ä∫ HTML Website Export\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"styles/academic.css\"\n    Received string:    \"<!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\\\"UTF-8\\\">\n      <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n      <title>Research Team Portal</title>\n      <style>\n        :root {\n          --background: #f5f5f5;\n          --text: #333333;\n          --link: #990000;\n          --accent: #666666;\n          --border: #cccccc;\n        }\n        body {\n          font-family: system-ui, -apple-system, sans-serif;\n          margin: 0;\n          padding: 0;\n          background: var(--background);\n          color: var(--text);\n        }\n        .container {\n          display: grid;\n          grid-template-columns: 300px 1fr;\n          height: 100vh;\n        }\n        .sidebar {\n          padding: 20px;\n          border-right: 1px solid var(--border);\n          overflow-y: auto;\n        }\n        .main {\n          padding: 20px;\n          overflow-y: auto;\n        }\n        h1, h2, h3, h4 {\n          color: var(--text);\n          margin-top: 0;\n        }\n        a {\n          color: var(--link);\n          text-decoration: none;\n        }\n        a:hover {\n          text-decoration: underline;\n        }\n        .entity-list {\n          list-style: none;\n          padding: 0;\n        }\n        .entity-item {\n          padding: 8px;\n          margin: 4px 0;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .entity-type {\n          color: var(--accent);\n          font-size: 0.9em;\n        }\n        #graph {\n          width: 100%;\n          height: 600px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n        }\n        .search-box {\n          margin-bottom: 20px;\n        }\n        #search-input {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid var(--border);\n          border-radius: 4px;\n          background: var(--background);\n          color: var(--text);\n        }\n      </style>\n      <script src=\\\"https://d3js.org/d3.v7.min.js\\\"></script>\n    </head>\n    <body>\n      <div class=\\\"container\\\">\n        <div class=\\\"sidebar\\\">\n          <h2>Research Team Portal</h2>\n          <p>Interactive visualization of research team relationships</p>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <div class=\\\"search-box\\\">\n            <input type=\\\"text\\\" id=\\\"search-input\\\" placeholder=\\\"Search entities...\\\" />\n          </div>¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          <h3>Entities</h3>\n          <ul class=\\\"entity-list\\\" id=\\\"entity-list\\\">¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"alice\\\" data-type=\\\"researcher\\\">\n                <a href=\\\"alice.html\\\">\n                  Alice Chen\n                </a>\n                <div class=\\\"entity-type\\\">researcher</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"bob\\\" data-type=\\\"researcher\\\">\n                <a href=\\\"bob.html\\\">\n                  Bob Smith\n                </a>\n                <div class=\\\"entity-type\\\">researcher</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"desert-ecology\\\" data-type=\\\"project\\\">\n                <a href=\\\"desert-ecology.html\\\">\n                  Desert Ecology Study\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              <li class=\\\"entity-item\\\" data-id=\\\"climate-impact\\\" data-type=\\\"project\\\">\n                <a href=\\\"climate-impact.html\\\">\n                  Climate Impact Assessment\n                </a>\n                <div class=\\\"entity-type\\\">project</div>\n              </li>¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </ul>\n        </div>\n        <div class=\\\"main\\\">\n          <div id=\\\"graph\\\"></div>\n          <script>\n            // Graph visualization code\n            const data = {\n              nodes: [{\\\"id\\\":\\\"alice\\\",\\\"name\\\":\\\"Alice Chen\\\",\\\"type\\\":\\\"researcher\\\"},{\\\"id\\\":\\\"bob\\\",\\\"name\\\":\\\"Bob Smith\\\",\\\"type\\\":\\\"researcher\\\"},{\\\"id\\\":\\\"desert-ecology\\\",\\\"name\\\":\\\"Desert Ecology Study\\\",\\\"type\\\":\\\"project\\\"},{\\\"id\\\":\\\"climate-impact\\\",\\\"name\\\":\\\"Climate Impact Assessment\\\",\\\"type\\\":\\\"project\\\"}],\n              links: [{\\\"source\\\":\\\"alice\\\",\\\"target\\\":\\\"desert-ecology\\\",\\\"type\\\":\\\"leads\\\"},{\\\"source\\\":\\\"alice\\\",\\\"target\\\":\\\"climate-impact\\\",\\\"type\\\":\\\"contributes_to\\\"},{\\\"source\\\":\\\"bob\\\",\\\"target\\\":\\\"desert-ecology\\\",\\\"type\\\":\\\"works_on\\\"},{\\\"source\\\":\\\"bob\\\",\\\"target\\\":\\\"alice\\\",\\\"type\\\":\\\"reports_to\\\"}]\n            };¬∑\n            const width = document.getElementById('graph').clientWidth;\n            const height = 600;¬∑\n            const simulation = d3.forceSimulation(data.nodes)\n              .force('link', d3.forceLink(data.links).id(d => d.id))\n              .force('charge', d3.forceManyBody().strength(-100))\n              .force('center', d3.forceCenter(width / 2, height / 2));¬∑\n            const svg = d3.select('#graph')\n              .append('svg')\n              .attr('width', width)\n              .attr('height', height);¬∑\n            const link = svg.append('g')\n              .selectAll('line')\n              .data(data.links)\n              .join('line')\n              .attr('stroke', 'var(--border)')\n              .attr('stroke-width', 1);¬∑\n            const node = svg.append('g')\n              .selectAll('circle')\n              .data(data.nodes)\n              .join('circle')\n              .attr('r', 5)\n              .attr('fill', 'var(--link)')\n              .call(drag(simulation));¬∑\n            node.append('title')\n              .text(d => d.name);¬∑\n            simulation.on('tick', () => {\n              link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);¬∑\n              node\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y);\n            });¬∑\n            function drag(simulation) {\n              function dragstarted(event) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n                event.subject.fx = event.subject.x;\n                event.subject.fy = event.subject.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragged(event) {\n                event.subject.fx = event.x;\n                event.subject.fy = event.y;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              function dragended(event) {\n                if (!event.active) simulation.alphaTarget(0);\n                event.subject.fx = null;\n                event.subject.fy = null;\n              }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              return d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended);\n            }¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n            // Search functionality\n            const searchInput = document.getElementById('search-input');\n            const entityList = document.getElementById('entity-list');\n            const entityItems = entityList.querySelectorAll('.entity-item');¬∑\n            searchInput.addEventListener('input', function() {\n              const searchTerm = this.value.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n              entityItems.forEach(item => {\n                const id = item.getAttribute('data-id').toLowerCase();\n                const type = item.getAttribute('data-type').toLowerCase();\n                const text = item.textContent.toLowerCase();¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n                if (id.includes(searchTerm) || type.includes(searchTerm) || text.includes(searchTerm)) {\n                  item.style.display = '';\n                } else {\n                  item.style.display = 'none';\n                }\n              });\n            });¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n          </script>\n        </div>\n      </div>\n    </body>\n    </html>\"\n\n      167 |     \n      168 |     // Check for academic theme-specific CSS styling\n    > 169 |     expect(htmlFiles['index.html']).toContain('styles/academic.css');\n          |                                     ^\n      170 |     // Instead of checking the actual CSS content, we'll check for theme references\n      171 |     expect(htmlFiles['index.html']).toContain('academic');\n      172 |   });\n\n      at Object.toContain (tests/integration/research-team-export.test.js:169:37)\n\n  ‚óè Research Team Export Tests ‚Ä∫ GraphML Export\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"<graph id=\\\"G\\\" edgedefault=\\\"directed\\\">\"\n    Received string:    \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n    <graphml xmlns=\\\"http://graphml.graphdrawing.org/xmlns\\\"\n        xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\n        xsi:schemaLocation=\\\"http://graphml.graphdrawing.org/xmlns\n         http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\\\">\n      <key id=\\\"name\\\" for=\\\"node\\\" attr.name=\\\"name\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"node\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"role\\\" for=\\\"node\\\" attr.name=\\\"role\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"department\\\" for=\\\"node\\\" attr.name=\\\"department\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"email\\\" for=\\\"node\\\" attr.name=\\\"email\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"publications\\\" for=\\\"node\\\" attr.name=\\\"publications\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"title\\\" for=\\\"node\\\" attr.name=\\\"title\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"startDate\\\" for=\\\"node\\\" attr.name=\\\"startDate\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"budget\\\" for=\\\"node\\\" attr.name=\\\"budget\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"status\\\" for=\\\"node\\\" attr.name=\\\"status\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"type\\\" for=\\\"edge\\\" attr.name=\\\"type\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"startDate\\\" for=\\\"edge\\\" attr.name=\\\"startDate\\\" attr.type=\\\"string\\\"/>\n      <key id=\\\"role\\\" for=\\\"edge\\\" attr.name=\\\"role\\\" attr.type=\\\"string\\\"/>\n      <graph id=\\\"UltraLink_Graph\\\" edgedefault=\\\"directed\\\">\n        <node id=\\\"alice\\\">\n          <data key=\\\"type\\\">researcher</data>\n          <data key=\\\"name\\\">Alice Chen</data>\n          <data key=\\\"role\\\">Principal Investigator</data>\n          <data key=\\\"department\\\">Biology</data>\n          <data key=\\\"email\\\">alice.chen@example.edu</data>\n          <data key=\\\"publications\\\">42</data>\n        </node>\n        <node id=\\\"bob\\\">\n          <data key=\\\"type\\\">researcher</data>\n          <data key=\\\"name\\\">Bob Smith</data>\n          <data key=\\\"role\\\">Postdoc</data>\n          <data key=\\\"department\\\">Biology</data>\n          <data key=\\\"email\\\">bob.smith@example.edu</data>\n          <data key=\\\"publications\\\">18</data>\n        </node>\n        <node id=\\\"desert-ecology\\\">\n          <data key=\\\"type\\\">project</data>\n          <data key=\\\"name\\\">Desert Ecology Study</data>\n          <data key=\\\"title\\\">Desert Ecology Study</data>\n          <data key=\\\"startDate\\\">2023-01-15</data>\n          <data key=\\\"budget\\\">150000</data>\n          <data key=\\\"status\\\">Active</data>\n        </node>\n        <node id=\\\"climate-impact\\\">\n          <data key=\\\"type\\\">project</data>\n          <data key=\\\"name\\\">Climate Impact Assessment</data>\n          <data key=\\\"title\\\">Climate Impact Assessment</data>\n          <data key=\\\"startDate\\\">2022-08-10</data>\n          <data key=\\\"budget\\\">220000</data>\n          <data key=\\\"status\\\">Active</data>\n        </node>\n        <edge source=\\\"alice\\\" target=\\\"desert-ecology\\\">\n          <data key=\\\"type\\\">leads</data>\n          <data key=\\\"startDate\\\">2023-01-15</data>\n          <data key=\\\"role\\\">Principal Investigator</data>\n        </edge>\n        <edge source=\\\"alice\\\" target=\\\"climate-impact\\\">\n          <data key=\\\"type\\\">contributes_to</data>\n          <data key=\\\"startDate\\\">2022-10-01</data>\n          <data key=\\\"role\\\">Consultant</data>\n        </edge>\n        <edge source=\\\"bob\\\" target=\\\"desert-ecology\\\">\n          <data key=\\\"type\\\">works_on</data>\n          <data key=\\\"startDate\\\">2023-02-01</data>\n          <data key=\\\"role\\\">Data Analyst</data>\n        </edge>\n        <edge source=\\\"bob\\\" target=\\\"alice\\\">\n          <data key=\\\"type\\\">reports_to</data>\n          <data key=\\\"startDate\\\">2023-02-01</data>\n        </edge>\n      </graph>\n    </graphml>\"\n\n      183 |     expect(graphml).toContain('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');\n      184 |     expect(graphml).toContain('<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"');\n    > 185 |     expect(graphml).toContain('<graph id=\"G\" edgedefault=\"directed\">');\n          |                     ^\n      186 |     \n      187 |     // Verify nodes\n      188 |     expect(graphml).toContain('<node id=\"alice\">');\n\n      at Object.toContain (tests/integration/research-team-export.test.js:185:21)\n\n  ‚óè Research Team Export Tests ‚Ä∫ Full Blob Export\n\n    TypeError: newUltralink.fromFullBlob is not a function\n\n      319 |     // Create a new instance and import\n      320 |     const newUltralink = new UltraLink();\n    > 321 |     await newUltralink.fromFullBlob(blob);\n          |                        ^\n      322 |     \n      323 |     // Verify data was imported correctly\n      324 |     expect(newUltralink.entities.size).toBe(ultralink.entities.size);\n\n      at Object.fromFullBlob (tests/integration/research-team-export.test.js:321:24)\n\nFAIL tests/integration/research-team.test.js\n  Research Team Integration Tests\n    ‚úì should correctly identify all researchers (1 ms)\n    ‚úì should find entities by attribute value\n    ‚úï should identify all project leads (1 ms)\n    ‚úï should find all mentorship relationships\n    ‚úï should identify equipment usage\n    ‚úï should find all publications by author\n    ‚úï should identify knowledge area expertise\n    ‚úï should find project focus areas\n    ‚úï should create valid subset of people data\n    ‚úï should create valid subset of project data (1 ms)\n    ‚úï should create valid subset of publication data\n    ‚úï should handle invalid subset type (1 ms)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should identify all project leads\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: 0\n\n      30 |   test('should identify all project leads', () => {\n      31 |     const leads = ultralink.getRelationships(null, { type: 'leads' });\n    > 32 |     expect(leads.length).toBe(2);\n         |                          ^\n      33 |     expect(leads.map(l => l.source)).toContain('alice-chen');\n      34 |     expect(leads.map(l => l.source)).toContain('bob-smith');\n      35 |   });\n\n      at Object.toBe (tests/integration/research-team.test.js:32:26)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should find all mentorship relationships\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: 0\n\n      37 |   test('should find all mentorship relationships', () => {\n      38 |     const mentorships = ultralink.getRelationships(null, { type: 'mentors' });\n    > 39 |     expect(mentorships.length).toBe(2);\n         |                                ^\n      40 |     expect(mentorships.some(m => \n      41 |       m.source === 'alice-chen' && m.target === 'carol-jones'\n      42 |     )).toBe(true);\n\n      at Object.toBe (tests/integration/research-team.test.js:39:32)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should identify equipment usage\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 4\n    Received: 0\n\n      45 |   test('should identify equipment usage', () => {\n      46 |     const equipmentUsage = ultralink.getRelationships(null, { type: 'uses' });\n    > 47 |     expect(equipmentUsage.length).toBe(4);\n         |                                   ^\n      48 |     expect(equipmentUsage.some(u => \n      49 |       u.source === 'computer-vision-project' && u.target === 'gpu-cluster'\n      50 |     )).toBe(true);\n\n      at Object.toBe (tests/integration/research-team.test.js:47:35)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should find all publications by author\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 5\n\n      53 |   test('should find all publications by author', () => {\n      54 |     const alicePublications = ultralink.getRelationships('alice-chen', { type: 'authored' });\n    > 55 |     expect(alicePublications.length).toBe(1);\n         |                                      ^\n      56 |     expect(alicePublications[0].target).toBe('vision-paper-2022');\n      57 |   });\n      58 |\n\n      at Object.toBe (tests/integration/research-team.test.js:55:38)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should identify knowledge area expertise\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 7\n    Received: 0\n\n      59 |   test('should identify knowledge area expertise', () => {\n      60 |     const expertise = ultralink.getRelationships(null, { type: 'has_expertise_in' });\n    > 61 |     expect(expertise.length).toBe(7);\n         |                              ^\n      62 |     expect(expertise.filter(e => e.source === 'alice-chen').length).toBe(2);\n      63 |   });\n      64 |\n\n      at Object.toBe (tests/integration/research-team.test.js:61:30)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should find project focus areas\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: 0\n\n      65 |   test('should find project focus areas', () => {\n      66 |     const focusAreas = ultralink.getRelationships(null, { type: 'focuses_on' });\n    > 67 |     expect(focusAreas.length).toBe(3);\n         |                               ^\n      68 |     expect(focusAreas.some(f => \n      69 |       f.source === 'computer-vision-project' && f.target === 'computer-vision'\n      70 |     )).toBe(true);\n\n      at Object.toBe (tests/integration/research-team.test.js:67:31)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should create valid subset of people data\n\n    TypeError: ultralink.createSubset is not a function\n\n      72 |\n      73 |   test('should create valid subset of people data', () => {\n    > 74 |     const peopleSubset = ultralink.createSubset('people');\n         |                                    ^\n      75 |     expect(peopleSubset.entities.size).toBe(6);\n      76 |     expect(peopleSubset.links.size).toBe(0);\n      77 |   });\n\n      at Object.createSubset (tests/integration/research-team.test.js:74:36)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should create valid subset of project data\n\n    TypeError: ultralink.createSubset is not a function\n\n      78 |\n      79 |   test('should create valid subset of project data', () => {\n    > 80 |     const projectSubset = ultralink.createSubset('projects');\n         |                                     ^\n      81 |     expect(projectSubset.entities.size).toBe(9); // 3 projects + 6 people\n      82 |     expect(projectSubset.links.size).toBeGreaterThan(0);\n      83 |   });\n\n      at Object.createSubset (tests/integration/research-team.test.js:80:37)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should create valid subset of publication data\n\n    TypeError: ultralink.createSubset is not a function\n\n      84 |\n      85 |   test('should create valid subset of publication data', () => {\n    > 86 |     const pubSubset = ultralink.createSubset('publications');\n         |                                 ^\n      87 |     expect(pubSubset.entities.size).toBe(8); // 2 publications + 6 people\n      88 |     expect(pubSubset.links.size).toBeGreaterThan(0);\n      89 |   });\n\n      at Object.createSubset (tests/integration/research-team.test.js:86:33)\n\n  ‚óè Research Team Integration Tests ‚Ä∫ should handle invalid subset type\n\n    expect(received).toThrow(expected)\n\n    Expected substring: \"Unknown aspect: invalid\"\n    Received message:   \"ultralink.createSubset is not a function\"\n\n          91 |   test('should handle invalid subset type', () => {\n          92 |     expect(() => {\n        > 93 |       ultralink.createSubset('invalid');\n             |                 ^\n          94 |     }).toThrow('Unknown aspect: invalid');\n          95 |   });\n          96 | });\n\n      at createSubset (tests/integration/research-team.test.js:93:17)\n      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)\n      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)\n      at Object.toThrow (tests/integration/research-team.test.js:94:8)\n      at Object.toThrow (tests/integration/research-team.test.js:94:8)\n\nFAIL tests/integration/parser-store.test.js\n  UltraLinkParser and EntityStore Integration\n    Basic Parsing and Entity Creation\n      ‚úï should parse Obsidian-style links and create corresponding entities\n      ‚úï should handle documents with duplicate links\n    Custom Parser Integration\n      ‚úï should use custom parsers to extract links in different formats\n    Multi-Document Integration\n      ‚úï should correctly maintain entity relationships across multiple documents\n    Error Handling\n      ‚úï should gracefully handle malformed input\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should parse Obsidian-style links and create corresponding entities\n\n    TypeError: EntityStore is not a constructor\n\n      13 |   \n      14 |   beforeEach(() => {\n    > 15 |     store = new EntityStore();\n         |             ^\n      16 |     parser = new UltraLinkParser(store);\n      17 |   });\n      18 |   \n\n      at Object.<anonymous> (tests/integration/parser-store.test.js:15:13)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should parse Obsidian-style links and create corresponding entities\n\n    TypeError: Cannot read properties of undefined (reading 'clear')\n\n      19 |   afterEach(async () => {\n      20 |     // Cleanup after each test\n    > 21 |     await store.clear();\n         |                 ^\n      22 |   });\n      23 |   \n      24 |   describe('Basic Parsing and Entity Creation', () => {\n\n      at Object.clear (tests/integration/parser-store.test.js:21:17)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should handle documents with duplicate links\n\n    TypeError: EntityStore is not a constructor\n\n      13 |   \n      14 |   beforeEach(() => {\n    > 15 |     store = new EntityStore();\n         |             ^\n      16 |     parser = new UltraLinkParser(store);\n      17 |   });\n      18 |   \n\n      at Object.<anonymous> (tests/integration/parser-store.test.js:15:13)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Basic Parsing and Entity Creation ‚Ä∫ should handle documents with duplicate links\n\n    TypeError: Cannot read properties of undefined (reading 'clear')\n\n      19 |   afterEach(async () => {\n      20 |     // Cleanup after each test\n    > 21 |     await store.clear();\n         |                 ^\n      22 |   });\n      23 |   \n      24 |   describe('Basic Parsing and Entity Creation', () => {\n\n      at Object.clear (tests/integration/parser-store.test.js:21:17)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Custom Parser Integration ‚Ä∫ should use custom parsers to extract links in different formats\n\n    TypeError: EntityStore is not a constructor\n\n      13 |   \n      14 |   beforeEach(() => {\n    > 15 |     store = new EntityStore();\n         |             ^\n      16 |     parser = new UltraLinkParser(store);\n      17 |   });\n      18 |   \n\n      at Object.<anonymous> (tests/integration/parser-store.test.js:15:13)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Custom Parser Integration ‚Ä∫ should use custom parsers to extract links in different formats\n\n    TypeError: Cannot read properties of undefined (reading 'clear')\n\n      19 |   afterEach(async () => {\n      20 |     // Cleanup after each test\n    > 21 |     await store.clear();\n         |                 ^\n      22 |   });\n      23 |   \n      24 |   describe('Basic Parsing and Entity Creation', () => {\n\n      at Object.clear (tests/integration/parser-store.test.js:21:17)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Multi-Document Integration ‚Ä∫ should correctly maintain entity relationships across multiple documents\n\n    TypeError: EntityStore is not a constructor\n\n      13 |   \n      14 |   beforeEach(() => {\n    > 15 |     store = new EntityStore();\n         |             ^\n      16 |     parser = new UltraLinkParser(store);\n      17 |   });\n      18 |   \n\n      at Object.<anonymous> (tests/integration/parser-store.test.js:15:13)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Multi-Document Integration ‚Ä∫ should correctly maintain entity relationships across multiple documents\n\n    TypeError: Cannot read properties of undefined (reading 'clear')\n\n      19 |   afterEach(async () => {\n      20 |     // Cleanup after each test\n    > 21 |     await store.clear();\n         |                 ^\n      22 |   });\n      23 |   \n      24 |   describe('Basic Parsing and Entity Creation', () => {\n\n      at Object.clear (tests/integration/parser-store.test.js:21:17)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Error Handling ‚Ä∫ should gracefully handle malformed input\n\n    TypeError: EntityStore is not a constructor\n\n      13 |   \n      14 |   beforeEach(() => {\n    > 15 |     store = new EntityStore();\n         |             ^\n      16 |     parser = new UltraLinkParser(store);\n      17 |   });\n      18 |   \n\n      at Object.<anonymous> (tests/integration/parser-store.test.js:15:13)\n\n  ‚óè UltraLinkParser and EntityStore Integration ‚Ä∫ Error Handling ‚Ä∫ should gracefully handle malformed input\n\n    TypeError: Cannot read properties of undefined (reading 'clear')\n\n      19 |   afterEach(async () => {\n      20 |     // Cleanup after each test\n    > 21 |     await store.clear();\n         |                 ^\n      22 |   });\n      23 |   \n      24 |   describe('Basic Parsing and Entity Creation', () => {\n\n      at Object.clear (tests/integration/parser-store.test.js:21:17)\n\nTest Suites: 5 failed, 5 total\nTests:       32 failed, 13 passed, 45 total\nSnapshots:   0 total\nTime:        0.236 s, estimated 1 s\nRan all test suites matching /tests\\/integration/i.\n",
      "exitCode": 1
    },
    {
      "name": "System Export Tests",
      "command": "npx jest tests/system",
      "required": true,
      "status": "failed",
      "output": "\nüîç \u001b[1m\u001b[36mUltraLink Test Suite Starting\u001b[0m\n\n‚ùå \u001b[31mtests/system/rendering.test.js\u001b[0m - 52/56 tests passed\n‚úÖ \u001b[32mtests/system/placeholder.test.js\u001b[0m - 1/1 tests passed\n\nüìä \u001b[1m\u001b[36mTest Summary\u001b[0m\n   Total Test Suites: 2\n   Total Tests: 57\n   Passed: \u001b[32m53\u001b[0m\n   Failed: \u001b[31m4\u001b[0m\n   Time: 0.32s\n\n‚ùå \u001b[1m\u001b[31mFailed Tests Details:\u001b[0m\n\n1. \u001b[31mSystem Rendering Tests ‚Ä∫ ResearchTeam Rendering ‚Ä∫ visualization format ‚Ä∫ should render ResearchTeam to visualization format\u001b[0m\n   üìÑ File: tests/system/rendering.test.js\n   üî¥ expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n\n2. \u001b[31mSystem Rendering Tests ‚Ä∫ DesertEcosystem Rendering ‚Ä∫ visualization format ‚Ä∫ should render DesertEcosystem to visualization format\u001b[0m\n   üìÑ File: tests/system/rendering.test.js\n   üî¥ expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n\n3. \u001b[31mSystem Rendering Tests ‚Ä∫ ActiveInferenceLab Rendering ‚Ä∫ visualization format ‚Ä∫ should render ActiveInferenceLab to visualization format\u001b[0m\n   üìÑ File: tests/system/rendering.test.js\n   üî¥ expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n\n4. \u001b[31mSystem Rendering Tests ‚Ä∫ USAHistory Rendering ‚Ä∫ visualization format ‚Ä∫ should render USAHistory to visualization format\u001b[0m\n   üìÑ File: tests/system/rendering.test.js\n   üî¥ expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n\n‚ùó \u001b[33mCheck the failed tests and fix the issues before proceeding.\u001b[0m\n\n",
      "error": "Command failed: npx jest tests/system\nFAIL tests/system/rendering.test.js\n  System Rendering Tests\n    ResearchTeam Rendering\n      json format\n        ‚úì should render ResearchTeam to json format (1 ms)\n        ‚úì should validate json output structure\n      graphml format\n        ‚úì should render ResearchTeam to graphml format (1 ms)\n        ‚úì should validate graphml output structure (1 ms)\n      obsidian format\n        ‚úì should render ResearchTeam to obsidian format (5 ms)\n        ‚úì should validate obsidian output structure\n      html-website format\n        ‚úì should render ResearchTeam to html-website format (24 ms)\n        ‚úì should validate html-website output structure (1 ms)\n      visualization format\n        ‚úï should render ResearchTeam to visualization format\n        ‚úì should validate visualization output structure (1 ms)\n      csv format\n        ‚úì should render ResearchTeam to csv format (1 ms)\n        ‚úì should validate csv output structure\n      kif format\n        ‚úì should render ResearchTeam to kif format\n        ‚úì should validate kif output structure (1 ms)\n    DesertEcosystem Rendering\n      json format\n        ‚úì should render DesertEcosystem to json format (1 ms)\n        ‚úì should validate json output structure\n      graphml format\n        ‚úì should render DesertEcosystem to graphml format\n        ‚úì should validate graphml output structure (1 ms)\n      obsidian format\n        ‚úì should render DesertEcosystem to obsidian format (5 ms)\n        ‚úì should validate obsidian output structure (1 ms)\n      html-website format\n        ‚úì should render DesertEcosystem to html-website format (32 ms)\n        ‚úì should validate html-website output structure\n      visualization format\n        ‚úï should render DesertEcosystem to visualization format\n        ‚úì should validate visualization output structure\n      csv format\n        ‚úì should render DesertEcosystem to csv format (1 ms)\n        ‚úì should validate csv output structure\n      kif format\n        ‚úì should render DesertEcosystem to kif format\n        ‚úì should validate kif output structure\n    ActiveInferenceLab Rendering\n      json format\n        ‚úì should render ActiveInferenceLab to json format\n        ‚úì should validate json output structure\n      graphml format\n        ‚úì should render ActiveInferenceLab to graphml format\n        ‚úì should validate graphml output structure\n      obsidian format\n        ‚úì should render ActiveInferenceLab to obsidian format (2 ms)\n        ‚úì should validate obsidian output structure\n      html-website format\n        ‚úì should render ActiveInferenceLab to html-website format (13 ms)\n        ‚úì should validate html-website output structure\n      visualization format\n        ‚úï should render ActiveInferenceLab to visualization format\n        ‚úì should validate visualization output structure (1 ms)\n      csv format\n        ‚úì should render ActiveInferenceLab to csv format\n        ‚úì should validate csv output structure\n      kif format\n        ‚úì should render ActiveInferenceLab to kif format (1 ms)\n        ‚úì should validate kif output structure\n    USAHistory Rendering\n      json format\n        ‚úì should render USAHistory to json format\n        ‚úì should validate json output structure\n      graphml format\n        ‚úì should render USAHistory to graphml format (1 ms)\n        ‚úì should validate graphml output structure\n      obsidian format\n        ‚úì should render USAHistory to obsidian format (8 ms)\n        ‚úì should validate obsidian output structure\n      html-website format\n        ‚úì should render USAHistory to html-website format (46 ms)\n        ‚úì should validate html-website output structure (1 ms)\n      visualization format\n        ‚úï should render USAHistory to visualization format\n        ‚úì should validate visualization output structure\n      csv format\n        ‚úì should render USAHistory to csv format (1 ms)\n        ‚úì should validate csv output structure\n      kif format\n        ‚úì should render USAHistory to kif format (1 ms)\n        ‚úì should validate kif output structure\n\n  ‚óè System Rendering Tests ‚Ä∫ ResearchTeam Rendering ‚Ä∫ visualization format ‚Ä∫ should render ResearchTeam to visualization format\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      200 |                   const vizDir = path.join(outputPath, vizFormat);\n      201 |                   const files = fs.readdirSync(vizDir);\n    > 202 |                   expect(files.length).toBeGreaterThan(0);\n          |                                        ^\n      203 |                   \n      204 |                   // Debug info\n      205 |                   console.log(`Testing format: ${vizFormat}, Files found:`, files);\n\n      at toBeGreaterThan (tests/system/rendering.test.js:202:40)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/system/rendering.test.js:199:29)\n\n  ‚óè System Rendering Tests ‚Ä∫ DesertEcosystem Rendering ‚Ä∫ visualization format ‚Ä∫ should render DesertEcosystem to visualization format\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      200 |                   const vizDir = path.join(outputPath, vizFormat);\n      201 |                   const files = fs.readdirSync(vizDir);\n    > 202 |                   expect(files.length).toBeGreaterThan(0);\n          |                                        ^\n      203 |                   \n      204 |                   // Debug info\n      205 |                   console.log(`Testing format: ${vizFormat}, Files found:`, files);\n\n      at toBeGreaterThan (tests/system/rendering.test.js:202:40)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/system/rendering.test.js:199:29)\n\n  ‚óè System Rendering Tests ‚Ä∫ ActiveInferenceLab Rendering ‚Ä∫ visualization format ‚Ä∫ should render ActiveInferenceLab to visualization format\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      200 |                   const vizDir = path.join(outputPath, vizFormat);\n      201 |                   const files = fs.readdirSync(vizDir);\n    > 202 |                   expect(files.length).toBeGreaterThan(0);\n          |                                        ^\n      203 |                   \n      204 |                   // Debug info\n      205 |                   console.log(`Testing format: ${vizFormat}, Files found:`, files);\n\n      at toBeGreaterThan (tests/system/rendering.test.js:202:40)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/system/rendering.test.js:199:29)\n\n  ‚óè System Rendering Tests ‚Ä∫ USAHistory Rendering ‚Ä∫ visualization format ‚Ä∫ should render USAHistory to visualization format\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      200 |                   const vizDir = path.join(outputPath, vizFormat);\n      201 |                   const files = fs.readdirSync(vizDir);\n    > 202 |                   expect(files.length).toBeGreaterThan(0);\n          |                                        ^\n      203 |                   \n      204 |                   // Debug info\n      205 |                   console.log(`Testing format: ${vizFormat}, Files found:`, files);\n\n      at toBeGreaterThan (tests/system/rendering.test.js:202:40)\n          at Array.forEach (<anonymous>)\n      at Object.forEach (tests/system/rendering.test.js:199:29)\n\nPASS tests/system/placeholder.test.js\n  System Tests Placeholder\n    ‚úì should pass as a placeholder\n\nTest Suites: 1 failed, 1 passed, 2 total\nTests:       4 failed, 53 passed, 57 total\nSnapshots:   0 total\nTime:        0.32 s, estimated 1 s\nRan all test suites matching /tests\\/system/i.\n",
      "exitCode": 1
    },
    {
      "name": "End-to-End Tests",
      "command": "npx jest tests/e2e",
      "required": true,
      "status": "passed",
      "output": "\nüîç \u001b[1m\u001b[36mUltraLink Test Suite Starting\u001b[0m\n\n‚úÖ \u001b[32mtests/e2e/knowledge-base.test.js\u001b[0m - 1/1 tests passed\n\nüìä \u001b[1m\u001b[36mTest Summary\u001b[0m\n   Total Test Suites: 1\n   Total Tests: 1\n   Passed: \u001b[32m1\u001b[0m\n   Failed: \u001b[31m0\u001b[0m\n   Time: 0.10s\n\n‚úÖ \u001b[32mAll tests passed successfully!\u001b[0m\n\n",
      "error": null,
      "exitCode": 0
    }
  ],
  "summary": {
    "total": 5,
    "passed": 1,
    "failed": 4,
    "skipped": 0
  }
}